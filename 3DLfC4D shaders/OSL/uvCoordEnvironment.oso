OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0dev
# options: -q -o ..\build\win64-x64-release-free\2016.5\..\osl\uvCoordEnvironment.oso -I../../osl_shaders
shader uvCoordEnvironment
param	color	i_texture	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	float	intensity	0		%read{2147483647,-1} %write{2147483647,-1}
param	float	exposure	0		%read{2147483647,-1} %write{2147483647,-1}
param	color	tint	1 1 1		%read{2147483647,-1} %write{2147483647,-1}
param	int	mapping	0		%read{1,1} %write{2147483647,-1}
oparam	float[2]	o_outUV	0 0		%read{2147483647,-1} %write{21,41}
global	vector	I	%read{0,0} %write{2147483647,-1}
local	vector	R	%read{3,31} %write{0,0}
local	float	___321_signed_s	%read{20,20} %write{8,8}
local	float	___321_signed_t	%read{22,22} %write{19,19}
local	float	___322_signed_s	%read{36,36} %write{29,29}
local	float	___322_signed_t	%read{39,39} %write{35,35}
const	int	$const1	0		%read{1,38} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
const	float	$const2	1		%read{8,39} %write{2147483647,-1}
temp	float	$tmp2	%read{7,7} %write{5,5}
temp	float	$tmp3	%read{5,5} %write{3,3}
const	int	$const3	2		%read{4,31} %write{2147483647,-1}
temp	float	$tmp4	%read{5,5} %write{4,4}
const	float	$const4	3.14159274		%read{6,19} %write{2147483647,-1}
temp	float	$tmp5	%read{7,7} %write{6,6}
const	float	$const5	2		%read{6,33} %write{2147483647,-1}
temp	float	$tmp6	%read{8,8} %write{7,7}
temp	float	$tmp7	%read{19,19} %write{18,18}
const	int	$const6	1		%read{9,41} %write{2147483647,-1}
temp	float	$tmp8	%read{18,18} %write{9,9}
temp	float	$tmp9	%read{18,18} %write{17,17}
temp	float	$tmp10	%read{12,12} %write{10,10}
temp	float	$tmp11	%read{12,12} %write{11,11}
temp	float	$tmp12	%read{16,16} %write{12,12}
temp	float	$tmp13	%read{15,15} %write{13,13}
temp	float	$tmp14	%read{15,15} %write{14,14}
temp	float	$tmp15	%read{16,16} %write{15,15}
temp	float	$tmp16	%read{17,17} %write{16,16}
const	float	$const7	0.5		%read{20,40} %write{2147483647,-1}
temp	float	$tmp17	%read{21,21} %write{20,20}
temp	float	$tmp18	%read{23,23} %write{22,22}
temp	float	$tmp19	%read{29,29} %write{24,24}
temp	float	$tmp20	%read{29,29} %write{28,28}
temp	float	$tmp21	%read{26,26} %write{25,25}
temp	float	$tmp22	%read{27,27} %write{26,26}
temp	float	$tmp23	%read{28,28} %write{27,27}
temp	float	$tmp24	%read{35,35} %write{30,30}
temp	float	$tmp25	%read{35,35} %write{34,34}
temp	float	$tmp26	%read{32,32} %write{31,31}
temp	float	$tmp27	%read{33,33} %write{32,32}
temp	float	$tmp28	%read{34,34} %write{33,33}
temp	float	$tmp29	%read{37,37} %write{36,36}
temp	float	$tmp30	%read{38,38} %write{37,37}
temp	float	$tmp31	%read{40,40} %write{39,39}
temp	float	$tmp32	%read{41,41} %write{40,40}
code ___main___
# ../../osl_shaders/uvCoordEnvironment.osl:28
# 	vector R = normalize( I );
	normalize	R I 	%filename{"../../osl_shaders/uvCoordEnvironment.osl"} %line{28} %argrw{"wr"}
# ../../osl_shaders/uvCoordEnvironment.osl:30
# 	if( mapping == 0 )
	eq		$tmp1 mapping $const1 	%line{30} %argrw{"wrr"}
	if		$tmp1 24 42 	%argrw{"r"}
# ../../osl_shaders/uvCoordEnvironment.osl:32
# 		float signed_s = 1.0 - atan2( R[0], R[2] ) / (2 * M_PI);
	compref		$tmp3 R $const1 	%line{32} %argrw{"wrr"}
	compref		$tmp4 R $const3 	%argrw{"wrr"}
	atan2		$tmp2 $tmp3 $tmp4 	%argrw{"wrr"}
	mul		$tmp5 $const5 $const4 	%argrw{"wrr"}
	div		$tmp6 $tmp2 $tmp5 	%argrw{"wrr"}
	sub		___321_signed_s $const2 $tmp6 	%argrw{"wrr"}
# ../../osl_shaders/uvCoordEnvironment.osl:33
# 		float signed_t = atan2( R[1], sqrt( R[0]*R[0] + R[2]*R[2] ) ) / M_PI;
	compref		$tmp8 R $const6 	%line{33} %argrw{"wrr"}
	compref		$tmp10 R $const1 	%argrw{"wrr"}
	compref		$tmp11 R $const1 	%argrw{"wrr"}
	mul		$tmp12 $tmp10 $tmp11 	%argrw{"wrr"}
	compref		$tmp13 R $const3 	%argrw{"wrr"}
	compref		$tmp14 R $const3 	%argrw{"wrr"}
	mul		$tmp15 $tmp13 $tmp14 	%argrw{"wrr"}
	add		$tmp16 $tmp12 $tmp15 	%argrw{"wrr"}
	sqrt		$tmp9 $tmp16 	%argrw{"wr"}
	atan2		$tmp7 $tmp8 $tmp9 	%argrw{"wrr"}
	div		___321_signed_t $tmp7 $const4 	%argrw{"wrr"}
# ../../osl_shaders/uvCoordEnvironment.osl:35
# 		o_outUV[0] = signed_s + 0.5;
	add		$tmp17 ___321_signed_s $const7 	%line{35} %argrw{"wrr"}
	aassign		o_outUV $const1 $tmp17 	%argrw{"wrr"}
# ../../osl_shaders/uvCoordEnvironment.osl:36
# 		o_outUV[1] = signed_t + 0.5;
	add		$tmp18 ___321_signed_t $const7 	%line{36} %argrw{"wrr"}
	aassign		o_outUV $const6 $tmp18 	%argrw{"wrr"}
# ../../osl_shaders/uvCoordEnvironment.osl:41
# 		float signed_s = R[0] / sqrt( 2.0 * (R[2]+1) );
	compref		$tmp19 R $const1 	%line{41} %argrw{"wrr"}
	compref		$tmp21 R $const3 	%argrw{"wrr"}
	add		$tmp22 $tmp21 $const2 	%argrw{"wrr"}
	mul		$tmp23 $const5 $tmp22 	%argrw{"wrr"}
	sqrt		$tmp20 $tmp23 	%argrw{"wr"}
	div		___322_signed_s $tmp19 $tmp20 	%argrw{"wrr"}
# ../../osl_shaders/uvCoordEnvironment.osl:42
# 		float signed_t = R[1] / sqrt( 2.0 * (R[2]+1) );
	compref		$tmp24 R $const6 	%line{42} %argrw{"wrr"}
	compref		$tmp26 R $const3 	%argrw{"wrr"}
	add		$tmp27 $tmp26 $const2 	%argrw{"wrr"}
	mul		$tmp28 $const5 $tmp27 	%argrw{"wrr"}
	sqrt		$tmp25 $tmp28 	%argrw{"wr"}
	div		___322_signed_t $tmp24 $tmp25 	%argrw{"wrr"}
# ../../osl_shaders/uvCoordEnvironment.osl:44
# 		o_outUV[0] = (signed_s + 1.0) * 0.5;
	add		$tmp29 ___322_signed_s $const2 	%line{44} %argrw{"wrr"}
	mul		$tmp30 $tmp29 $const7 	%argrw{"wrr"}
	aassign		o_outUV $const1 $tmp30 	%argrw{"wrr"}
# ../../osl_shaders/uvCoordEnvironment.osl:45
# 		o_outUV[1] = (signed_t + 1.0) * 0.5;
	add		$tmp31 ___322_signed_t $const2 	%line{45} %argrw{"wrr"}
	mul		$tmp32 $tmp31 $const7 	%argrw{"wrr"}
	aassign		o_outUV $const6 $tmp32 	%argrw{"wrr"}
	end
