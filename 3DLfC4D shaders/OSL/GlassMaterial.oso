OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2dev
# options: -IC:\Program Files\3Delight/osl
shader GlassMaterial
param	color	tint	1 1 1		%read{2147483647,-1} %write{2147483647,-1}
param	color	reflection_color	1 1 1		%read{5,5} %write{2147483647,-1}
param	color	refraction_color	1 1 1		%read{72,76} %write{2147483647,-1}
param	float	roughness	0.1		%read{2,69} %write{2147483647,-1}
param	int	use_refraction	1		%read{67,67} %write{2147483647,-1}
param	float	ior	1.2		%read{4,71} %write{2147483647,-1}
oparam	float	f_out	0		%read{2147483647,-1} %write{2147483647,-1}
oparam	color	c_out	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
oparam	closure color	bsdf_out			%read{74,78} %write{5,78}
global	vector	I	%read{1,1} %write{2147483647,-1}
global	normal	N	%read{0,71} %write{2147483647,-1}
local	float	___221_IdotN	%read{50,58} %write{48,48}
local	float	___221_k	%read{54,59} %write{53,53}
local	float	___222_c	%read{10,38} %write{9,12}
local	float	___222_g	%read{24,38} %write{23,26}
local	float	___224_beta	%read{31,39} %write{27,27}
local	float	___224_F	%read{35,43} %write{33,42}
local	vector	___226_R	%read{2147483647,-1} %write{17,17}
local	vector	___226_T	%read{2147483647,-1} %write{56,66}
local	vector	Nn	%read{9,61} %write{0,0}
local	vector	In	%read{9,57} %write{1,1}
local	float	Kr	%read{44,44} %write{43,64}
local	float	Kt	%read{72,76} %write{46,65}
temp	closure color	$tmp1	%read{5,5} %write{4,4}
const	string	$const1	"cooktorrance"		%read{4,4} %write{2147483647,-1}
temp	float	$tmp2	%read{4,4} %write{2,2}
const	float	$const2	1.5		%read{2,69} %write{2147483647,-1}
const	int	$const3	0		%read{4,54} %write{2147483647,-1}
const	string	$const4	"microfacet"		%read{3,71} %write{2147483647,-1}
const	vector	$const5	0 0 0		%read{4,71} %write{2147483647,-1}
const	int	$const6	1		%read{67,71} %write{2147483647,-1}
temp	float	$tmp4	%read{19,58} %write{6,6}
const	float	$const7	1		%read{6,64} %write{2147483647,-1}
const	string	$const8	"fresnel"		%read{7,8} %write{2147483647,-1}
temp	int	$tmp5	%read{11,11} %write{10,10}
const	string	$const9	"reflect"		%read{13,13} %write{2147483647,-1}
temp	float	$tmp6	%read{15,15} %write{14,14}
temp	float	$tmp7	%read{16,16} %write{15,15}
const	float	$const11	2		%read{15,15} %write{2147483647,-1}
temp	vector	$tmp8	%read{17,17} %write{16,16}
temp	float	$tmp9	%read{20,20} %write{19,19}
const	string	$const12	"sqr"		%read{18,40} %write{2147483647,-1}
temp	float	$tmp10	%read{21,21} %write{20,20}
temp	float	$tmp11	%read{23,23} %write{21,21}
temp	float	$tmp12	%read{23,23} %write{22,22}
const	float	$const13	0		%read{24,65} %write{2147483647,-1}
temp	int	$tmp13	%read{25,25} %write{24,24}
temp	float	$tmp14	%read{29,29} %write{28,28}
temp	float	$tmp15	%read{30,30} %write{29,29}
temp	float	$tmp16	%read{33,33} %write{30,30}
temp	float	$tmp17	%read{32,32} %write{31,31}
temp	float	$tmp18	%read{33,33} %write{32,32}
const	float	$const14	0.5		%read{37,37} %write{2147483647,-1}
temp	float	$tmp19	%read{36,36} %write{35,35}
temp	float	$tmp20	%read{37,37} %write{36,36}
temp	float	$tmp21	%read{42,42} %write{41,41}
temp	float	$tmp22	%read{39,39} %write{38,38}
temp	float	$tmp23	%read{41,41} %write{39,39}
temp	float	$tmp24	%read{45,45} %write{44,44}
temp	float	$tmp25	%read{46,46} %write{45,45}
const	string	$const15	"refract"		%read{47,47} %write{2147483647,-1}
temp	float	$tmp26	%read{52,52} %write{49,49}
temp	float	$tmp27	%read{51,51} %write{50,50}
temp	float	$tmp28	%read{52,52} %write{51,51}
temp	float	$tmp29	%read{53,53} %write{52,52}
temp	int	$tmp30	%read{55,55} %write{54,54}
temp	vector	$tmp31	%read{62,62} %write{57,57}
temp	float	$tmp32	%read{60,60} %write{58,58}
temp	float	$tmp33	%read{60,60} %write{59,59}
temp	float	$tmp34	%read{61,61} %write{60,60}
temp	vector	$tmp35	%read{62,62} %write{61,61}
temp	int	$tmp36	%read{68,68} %write{67,67}
temp	closure color	$tmp37	%read{73,73} %write{71,71}
const	string	$const16	"ggx"		%read{71,71} %write{2147483647,-1}
temp	float	$tmp38	%read{71,71} %write{69,69}
temp	color	$tmp40	%read{73,73} %write{72,72}
temp	closure color	$tmp41	%read{74,74} %write{73,73}
temp	closure color	$tmp42	%read{77,77} %write{75,75}
const	string	$const17	"transparent"		%read{75,75} %write{2147483647,-1}
temp	color	$tmp43	%read{77,77} %write{76,76}
temp	closure color	$tmp44	%read{78,78} %write{77,77}
code ___main___
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl:26
# 	vector In=normalize(I);
	normalize	Nn N 	%filename{"C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl"} %line{26} %argrw{"wr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl:27
# 	
	normalize	In I 	%line{27} %argrw{"wr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl:30
# 	
	pow		$tmp2 roughness $const2 	%line{30} %argrw{"wrr"}
	functioncall	$const4 5 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:516
#     return concat(concat(a,b), c);
	closure		$tmp1 $const4 $const1 N $const5 $tmp2 $tmp2 ior $const3 	%filename{"C:/Program Files\\3Delight\\osl\\stdosl.h"} %line{516} %argrw{"wrrrrrrrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl:30
# 	
	mul		bsdf_out $tmp1 reflection_color 	%filename{"C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl"} %line{30} %argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl:34
# 	if(use_refraction==1){	
	div		$tmp4 $const7 ior 	%line{34} %argrw{"wrr"}
	functioncall	$const8 67 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:232
# }
	functioncall	$const8 67 	%filename{"C:/Program Files\\3Delight\\osl\\stdosl.h"} %line{232} %argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:204
#     float c = dot(I, N);
	dot		___222_c In Nn 	%line{204} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:205
#     if (c < 0)
	lt		$tmp5 ___222_c $const3 	%line{205} %argrw{"wrr"}
	if		$tmp5 13 13 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:206
#         c = -c;
	neg		___222_c ___222_c 	%line{206} %argrw{"wr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:207
#     R = reflect(I, N);
	functioncall	$const9 18 	%line{207} %argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:193
# vector reflect (vector I, vector N) { return I - 2*dot(N,I)*N; }
	dot		$tmp6 Nn In 	%line{193} %argrw{"wrr"}
	mul		$tmp7 $const11 $tmp6 	%argrw{"wrr"}
	mul		$tmp8 $tmp7 Nn 	%argrw{"wrr"}
	sub		___226_R In $tmp8 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:208
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	functioncall	$const12 20 	%line{208} %argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:203
#     float sqr(float x) { return x*x; }
	mul		$tmp9 $tmp4 $tmp4 	%line{203} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:208
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	div		$tmp10 $const7 $tmp9 	%line{208} %argrw{"wrr"}
	sub		$tmp11 $tmp10 $const7 	%argrw{"wrr"}
	mul		$tmp12 ___222_c ___222_c 	%argrw{"wrr"}
	add		___222_g $tmp11 $tmp12 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:209
#     if (g >= 0.0) {
	ge		$tmp13 ___222_g $const13 	%line{209} %argrw{"wrr"}
	if		$tmp13 64 67 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:210
#         g = sqrt (g);
	sqrt		___222_g ___222_g 	%line{210} %argrw{"wr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:211
#         float beta = g - c;
	sub		___224_beta ___222_g ___222_c 	%line{211} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:212
#         float F = (c * (g+c) - 1.0) / (c * beta + 1.0);
	add		$tmp14 ___222_g ___222_c 	%line{212} %argrw{"wrr"}
	mul		$tmp15 ___222_c $tmp14 	%argrw{"wrr"}
	sub		$tmp16 $tmp15 $const7 	%argrw{"wrr"}
	mul		$tmp17 ___222_c ___224_beta 	%argrw{"wrr"}
	add		$tmp18 $tmp17 $const7 	%argrw{"wrr"}
	div		___224_F $tmp16 $tmp18 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:213
#         F = 0.5 * (1.0 + sqr(F));
	functioncall	$const12 36 	%line{213} %argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:203
#     float sqr(float x) { return x*x; }
	mul		$tmp19 ___224_F ___224_F 	%line{203} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:213
#         F = 0.5 * (1.0 + sqr(F));
	add		$tmp20 $const7 $tmp19 	%line{213} %argrw{"wrr"}
	mul		___224_F $const14 $tmp20 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:214
#         F *= sqr (beta / (g+c));
	add		$tmp22 ___222_g ___222_c 	%line{214} %argrw{"wrr"}
	div		$tmp23 ___224_beta $tmp22 	%argrw{"wrr"}
	functioncall	$const12 42 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:203
#     float sqr(float x) { return x*x; }
	mul		$tmp21 $tmp23 $tmp23 	%line{203} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:214
#         F *= sqr (beta / (g+c));
	mul		___224_F ___224_F $tmp21 	%line{214} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:215
#         Kr = F;
	assign		Kr ___224_F 	%line{215} %argrw{"wr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:216
#         Kt = (1.0 - Kr) * eta*eta;
	sub		$tmp24 $const7 Kr 	%line{216} %argrw{"wrr"}
	mul		$tmp25 $tmp24 $tmp4 	%argrw{"wrr"}
	mul		Kt $tmp25 $tmp4 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:219
#         T = refract(I, N, eta);
	functioncall	$const15 64 	%line{219} %argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:195
#     float IdotN = dot (I, N);
	dot		___221_IdotN In Nn 	%line{195} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:196
#     float k = 1 - eta*eta * (1 - IdotN*IdotN);
	mul		$tmp26 $tmp4 $tmp4 	%line{196} %argrw{"wrr"}
	mul		$tmp27 ___221_IdotN ___221_IdotN 	%argrw{"wrr"}
	sub		$tmp28 $const7 $tmp27 	%argrw{"wrr"}
	mul		$tmp29 $tmp26 $tmp28 	%argrw{"wrr"}
	sub		___221_k $const7 $tmp29 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:197
#     return (k < 0) ? vector(0,0,0) : (eta*I - N * (eta*IdotN + sqrt(k)));
	lt		$tmp30 ___221_k $const3 	%line{197} %argrw{"wrr"}
	if		$tmp30 57 63 	%argrw{"r"}
	assign		___226_T $const5 	%argrw{"wr"}
	mul		$tmp31 $tmp4 In 	%argrw{"wrr"}
	mul		$tmp32 $tmp4 ___221_IdotN 	%argrw{"wrr"}
	sqrt		$tmp33 ___221_k 	%argrw{"wr"}
	add		$tmp34 $tmp32 $tmp33 	%argrw{"wrr"}
	mul		$tmp35 Nn $tmp34 	%argrw{"wrr"}
	sub		___226_T $tmp31 $tmp35 	%argrw{"wrr"}
	return
# C:/Program Files\\3Delight\\osl\\stdosl.h:222
#         Kr = 1.0;
	assign		Kr $const7 	%line{222} %argrw{"wr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:223
#         Kt = 0.0;
	assign		Kt $const13 	%line{223} %argrw{"wr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:224
#         T = vector (0,0,0);
	assign		___226_T $const5 	%line{224} %argrw{"wr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl:35
# 		bsdf_out+=Kt*refraction_color*microfacet("ggx", N, pow(roughness,1.5), ior, 1);
	eq		$tmp36 use_refraction $const6 	%filename{"C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl"} %line{35} %argrw{"wrr"}
	if		$tmp36 75 79 	%argrw{"r"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl:36
# 	}
	pow		$tmp38 roughness $const2 	%line{36} %argrw{"wrr"}
	functioncall	$const4 72 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:516
# string substr (string s, int start) { return substr (s, start, strlen(s)); }
	closure		$tmp37 $const4 $const16 N $const5 $tmp38 $tmp38 ior $const6 	%filename{"C:/Program Files\\3Delight\\osl\\stdosl.h"} %line{516} %argrw{"wrrrrrrrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl:36
# 	}
	mul		$tmp40 Kt refraction_color 	%filename{"C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl"} %line{36} %argrw{"wrr"}
	mul		$tmp41 $tmp37 $tmp40 	%argrw{"wrr"}
	add		bsdf_out bsdf_out $tmp41 	%argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\GlassMaterial.osl:39
# 	}
	closure		$tmp42 $const17 	%line{39} %argrw{"wr"}
	mul		$tmp43 Kt refraction_color 	%argrw{"wrr"}
	mul		$tmp44 $tmp42 $tmp43 	%argrw{"wrr"}
	add		bsdf_out bsdf_out $tmp44 	%argrw{"wrr"}
	end
