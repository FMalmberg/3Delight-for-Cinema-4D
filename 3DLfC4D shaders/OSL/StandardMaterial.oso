OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2dev
# options: -IC:\Program Files\3Delight/osl
shader StandardMaterial
param	int	coating_on	0		%read{48,48} %write{2147483647,-1}
param	color	coating_color	1 1 1		%read{125,125} %write{2147483647,-1}
param	float	coating_roughness	0.1		%read{120,120} %write{2147483647,-1}
param	float	coating_fresnel_reflectance	0.1		%read{51,55} %write{2147483647,-1}
param	color	diffuse_color	1 1 1		%read{3,3} %write{2147483647,-1}
param	float	diffuse_weight	0.80000001		%read{3,3} %write{2147483647,-1}
param	float	diffuse_roughness	0		%read{2,2} %write{2147483647,-1}
param	color	specular_color	1 1 1		%read{39,39} %write{2147483647,-1}
param	float	specular_weight	0.2		%read{39,39} %write{2147483647,-1}
param	float	specular_roughness	0.1		%read{14,15} %write{2147483647,-1}
param	float	specular_fresnel_reflectance	1		%read{6,10} %write{2147483647,-1}
param	float	specular_anisotropy	0		%read{17,23} %write{2147483647,-1}
param	color	anisotropy_direction	1 0 0		%read{30,34} %write{2147483647,-1}
param	int	emission_on	0		%read{43,43} %write{2147483647,-1}
param	float	emission_weight	1		%read{45,45} %write{2147483647,-1}
param	color	emission_color	1 1 1		%read{44,44} %write{2147483647,-1}
oparam	float	f_out	0		%read{2147483647,-1} %write{2147483647,-1}
oparam	color	c_out	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
oparam	closure color	bsdf_out			%read{41,121} %write{4,126}
global	vector	I	%read{1,1} %write{2147483647,-1}
global	normal	N	%read{0,124} %write{2147483647,-1}
local	float	___221_IdotN	%read{103,111} %write{101,101}
local	float	___221_k	%read{107,112} %write{106,106}
local	float	___222_c	%read{63,91} %write{62,65}
local	float	___222_g	%read{77,91} %write{76,79}
local	float	___224_beta	%read{84,92} %write{80,80}
local	float	___224_F	%read{88,96} %write{86,95}
local	vector	___226_R	%read{2147483647,-1} %write{70,70}
local	vector	___226_T	%read{2147483647,-1} %write{109,119}
local	float	___310_T	%read{11,57} %write{10,55}
local	vector	Nn	%read{62,114} %write{0,0}
local	vector	In	%read{62,110} %write{1,1}
local	float	specular_eta	%read{38,38} %write{8,13}
local	float	xalpha	%read{26,38} %write{14,28}
local	float	yalpha	%read{27,38} %write{15,29}
local	float	anisotropy	%read{25,27} %write{16,25}
local	float	u_x	%read{36,36} %write{31,31}
local	float	u_y	%read{36,36} %write{33,33}
local	float	u_z	%read{36,36} %write{35,35}
local	vector	U	%read{37,38} %write{36,37}
local	float	___315_coating_eta	%read{59,124} %write{53,58}
local	float	___315_Kr	%read{97,97} %write{96,117}
local	float	___315_Kt	%read{121,121} %write{99,118}
local	float	___315_coating_alpha	%read{122,122} %write{120,120}
temp	closure color	$tmp1	%read{4,4} %write{2,2}
const	string	$const1	"oren_nayar"		%read{2,2} %write{2147483647,-1}
temp	color	$tmp2	%read{4,4} %write{3,3}
const	string	$const2	"eta_from_intensity"		%read{5,50} %write{2147483647,-1}
const	int	$const3	1		%read{6,51} %write{2147483647,-1}
temp	int	$tmp3	%read{7,7} %write{6,6}
const	int	$const4	500		%read{8,53} %write{2147483647,-1}
temp	float	$tmp4	%read{13,13} %write{11,11}
const	float	$const5	1		%read{11,117} %write{2147483647,-1}
temp	float	$tmp5	%read{13,13} %write{12,12}
const	float	$const6	1.5		%read{14,122} %write{2147483647,-1}
const	int	$const7	0		%read{17,124} %write{2147483647,-1}
temp	int	$tmp6	%read{18,18} %write{17,17}
const	float	$const8	0.75		%read{20,20} %write{2147483647,-1}
temp	float	$tmp7	%read{20,20} %write{19,19}
temp	float	$tmp8	%read{21,21} %write{20,20}
temp	float	$tmp9	%read{22,22} %write{21,21}
temp	int	$tmp10	%read{24,24} %write{23,23}
const	float	$const9	0.001		%read{28,120} %write{2147483647,-1}
temp	float	$tmp11	%read{31,31} %write{30,30}
const	float	$const10	0.5		%read{31,90} %write{2147483647,-1}
temp	float	$tmp12	%read{33,33} %write{32,32}
const	int	$const11	2		%read{34,34} %write{2147483647,-1}
temp	float	$tmp13	%read{35,35} %write{34,34}
const	string	$const12	"object"		%read{36,36} %write{2147483647,-1}
temp	closure color	$tmp14	%read{40,40} %write{38,38}
const	string	$const13	"cooktorrance"		%read{38,124} %write{2147483647,-1}
const	string	$const14	"microfacet"		%read{38,124} %write{2147483647,-1}
temp	color	$tmp15	%read{40,40} %write{39,39}
temp	closure color	$tmp16	%read{41,41} %write{40,40}
temp	closure color	$tmp17	%read{46,46} %write{42,42}
const	string	$const15	"emission"		%read{42,42} %write{2147483647,-1}
temp	color	$tmp18	%read{45,45} %write{44,44}
temp	color	$tmp19	%read{44,44} %write{43,43}
temp	color	$tmp20	%read{46,46} %write{45,45}
temp	closure color	$tmp21	%read{47,47} %write{46,46}
temp	int	$tmp22	%read{49,49} %write{48,48}
temp	int	$tmp23	%read{52,52} %write{51,51}
temp	float	$tmp24	%read{58,58} %write{56,56}
temp	float	$tmp25	%read{58,58} %write{57,57}
temp	float	$tmp26	%read{72,111} %write{59,59}
const	string	$const16	"fresnel"		%read{60,61} %write{2147483647,-1}
temp	int	$tmp27	%read{64,64} %write{63,63}
const	string	$const17	"reflect"		%read{66,66} %write{2147483647,-1}
temp	float	$tmp28	%read{68,68} %write{67,67}
temp	float	$tmp29	%read{69,69} %write{68,68}
const	float	$const18	2		%read{68,68} %write{2147483647,-1}
temp	vector	$tmp30	%read{70,70} %write{69,69}
temp	float	$tmp31	%read{73,73} %write{72,72}
const	string	$const19	"sqr"		%read{71,93} %write{2147483647,-1}
temp	float	$tmp32	%read{74,74} %write{73,73}
temp	float	$tmp33	%read{76,76} %write{74,74}
temp	float	$tmp34	%read{76,76} %write{75,75}
const	float	$const20	0		%read{77,118} %write{2147483647,-1}
temp	int	$tmp35	%read{78,78} %write{77,77}
temp	float	$tmp36	%read{82,82} %write{81,81}
temp	float	$tmp37	%read{83,83} %write{82,82}
temp	float	$tmp38	%read{86,86} %write{83,83}
temp	float	$tmp39	%read{85,85} %write{84,84}
temp	float	$tmp40	%read{86,86} %write{85,85}
temp	float	$tmp41	%read{89,89} %write{88,88}
temp	float	$tmp42	%read{90,90} %write{89,89}
temp	float	$tmp43	%read{95,95} %write{94,94}
temp	float	$tmp44	%read{92,92} %write{91,91}
temp	float	$tmp45	%read{94,94} %write{92,92}
temp	float	$tmp46	%read{98,98} %write{97,97}
temp	float	$tmp47	%read{99,99} %write{98,98}
const	string	$const21	"refract"		%read{100,100} %write{2147483647,-1}
temp	float	$tmp48	%read{105,105} %write{102,102}
temp	float	$tmp49	%read{104,104} %write{103,103}
temp	float	$tmp50	%read{105,105} %write{104,104}
temp	float	$tmp51	%read{106,106} %write{105,105}
temp	int	$tmp52	%read{108,108} %write{107,107}
const	vector	$const22	0 0 0		%read{109,124} %write{2147483647,-1}
temp	vector	$tmp53	%read{115,115} %write{110,110}
temp	float	$tmp54	%read{113,113} %write{111,111}
temp	float	$tmp55	%read{113,113} %write{112,112}
temp	float	$tmp56	%read{114,114} %write{113,113}
temp	vector	$tmp57	%read{115,115} %write{114,114}
temp	closure color	$tmp58	%read{126,126} %write{121,121}
temp	closure color	$tmp59	%read{125,125} %write{124,124}
temp	float	$tmp60	%read{124,124} %write{122,122}
temp	closure color	$tmp62	%read{126,126} %write{125,125}
code ___main___
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:48
# 	vector In=normalize(I);
	normalize	Nn N 	%filename{"C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl"} %line{48} %argrw{"wr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:49
# 	
	normalize	In I 	%line{49} %argrw{"wr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:52
# 	
	closure		$tmp1 $const1 N diffuse_roughness 	%line{52} %argrw{"wrrr"}
	mul		$tmp2 diffuse_color diffuse_weight 	%argrw{"wrr"}
	mul		bsdf_out $tmp1 $tmp2 	%argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:55
# 	float xalpha=pow(specular_roughness,1.5);
	functioncall	$const2 14 	%line{55} %argrw{"r"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:10
# 	{
	ge		$tmp3 specular_fresnel_reflectance $const3 	%line{10} %argrw{"wrr"}
	if		$tmp3 10 10 	%argrw{"r"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:13
# 	}
	assign		specular_eta $const4 	%line{13} %argrw{"wr"}
	return
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:16
# 	return (T+1) / (1-T);
	sqrt		___310_T specular_fresnel_reflectance 	%line{16} %argrw{"wr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:17
# }
	add		$tmp4 ___310_T $const5 	%line{17} %argrw{"wrr"}
	sub		$tmp5 $const5 ___310_T 	%argrw{"wrr"}
	div		specular_eta $tmp4 $tmp5 	%argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:56
# 	float yalpha=pow(specular_roughness,1.5);
	pow		xalpha specular_roughness $const6 	%line{56} %argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:57
# 	float anisotropy=1;
	pow		yalpha specular_roughness $const6 	%line{57} %argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:58
# 	if(specular_anisotropy!=0){
	assign		anisotropy $const3 	%line{58} %argrw{"wr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:59
# 		anisotropy=1/(1+0.75*abs(specular_anisotropy));
	neq		$tmp6 specular_anisotropy $const7 	%line{59} %argrw{"wrr"}
	if		$tmp6 26 26 	%argrw{"r"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:60
# 		if(specular_anisotropy<0){
	abs		$tmp7 specular_anisotropy 	%line{60} %argrw{"wr"}
	mul		$tmp8 $const8 $tmp7 	%argrw{"wrr"}
	add		$tmp9 $const5 $tmp8 	%argrw{"wrr"}
	div		anisotropy $const5 $tmp9 	%argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:61
# 			anisotropy=1/anisotropy;
	lt		$tmp10 specular_anisotropy $const7 	%line{61} %argrw{"wrr"}
	if		$tmp10 26 26 	%argrw{"r"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:62
# 		}
	div		anisotropy $const5 anisotropy 	%line{62} %argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:65
# 	yalpha=yalpha/anisotropy;
	mul		xalpha xalpha anisotropy 	%line{65} %argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:66
# 	xalpha=max(xalpha,0.001);
	div		yalpha yalpha anisotropy 	%line{66} %argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:67
# 	yalpha=max(yalpha,0.001);
	max		xalpha xalpha $const9 	%line{67} %argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:68
# 	float u_x=anisotropy_direction[0]-0.5;
	max		yalpha yalpha $const9 	%line{68} %argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:69
# 	float u_y=anisotropy_direction[1]-0.5;
	compref		$tmp11 anisotropy_direction $const7 	%line{69} %argrw{"wrr"}
	sub		u_x $tmp11 $const10 	%argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:70
# 	float u_z=anisotropy_direction[2]-0.5;
	compref		$tmp12 anisotropy_direction $const3 	%line{70} %argrw{"wrr"}
	sub		u_y $tmp12 $const10 	%argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:71
# 	
	compref		$tmp13 anisotropy_direction $const11 	%line{71} %argrw{"wrr"}
	sub		u_z $tmp13 $const10 	%argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:73
# 	U=normalize(U);
	vector		U $const12 u_x u_y u_z 	%line{73} %argrw{"wrrrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:74
# 	bsdf_out+=specular_color*specular_weight*microfacet("cooktorrance", N,U, xalpha,yalpha, specular_eta, 0);
	normalize	U U 	%line{74} %argrw{"wr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:75
# 
	closure		$tmp14 $const14 $const13 N U xalpha yalpha specular_eta $const7 	%line{75} %argrw{"wrrrrrrrr"}
	mul		$tmp15 specular_color specular_weight 	%argrw{"wrr"}
	mul		$tmp16 $tmp14 $tmp15 	%argrw{"wrr"}
	add		bsdf_out bsdf_out $tmp16 	%argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:78
# 
	closure		$tmp17 $const15 	%line{78} %argrw{"wr"}
	assign		$tmp19 emission_on 	%argrw{"wr"}
	mul		$tmp18 $tmp19 emission_color 	%argrw{"wrr"}
	mul		$tmp20 $tmp18 emission_weight 	%argrw{"wrr"}
	mul		$tmp21 $tmp17 $tmp20 	%argrw{"wrr"}
	add		bsdf_out bsdf_out $tmp21 	%argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:81
# 	
	eq		$tmp22 coating_on $const3 	%line{81} %argrw{"wrr"}
	if		$tmp22 127 127 	%argrw{"r"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:83
# 		float Kr,Kt;
	functioncall	$const2 59 	%line{83} %argrw{"r"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:10
# 	{
	ge		$tmp23 coating_fresnel_reflectance $const3 	%line{10} %argrw{"wrr"}
	if		$tmp23 55 55 	%argrw{"r"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:13
# 	}
	assign		___315_coating_eta $const4 	%line{13} %argrw{"wr"}
	return
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:16
# 	return (T+1) / (1-T);
	sqrt		___310_T coating_fresnel_reflectance 	%line{16} %argrw{"wr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:17
# }
	add		$tmp24 ___310_T $const5 	%line{17} %argrw{"wrr"}
	sub		$tmp25 $const5 ___310_T 	%argrw{"wrr"}
	div		___315_coating_eta $tmp24 $tmp25 	%argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:86
# 		float coating_alpha=max(coating_roughness,0.001);
	div		$tmp26 $const5 ___315_coating_eta 	%line{86} %argrw{"wrr"}
	functioncall	$const16 120 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:232
# int    clamp (int x, int minval, int maxval) { return max(min(x,maxval),minval); }
	functioncall	$const16 120 	%filename{"C:/Program Files\\3Delight\\osl\\stdosl.h"} %line{232} %argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:204
#     float c = dot(I, N);
	dot		___222_c In Nn 	%line{204} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:205
#     if (c < 0)
	lt		$tmp27 ___222_c $const7 	%line{205} %argrw{"wrr"}
	if		$tmp27 66 66 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:206
#         c = -c;
	neg		___222_c ___222_c 	%line{206} %argrw{"wr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:207
#     R = reflect(I, N);
	functioncall	$const17 71 	%line{207} %argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:193
# vector reflect (vector I, vector N) { return I - 2*dot(N,I)*N; }
	dot		$tmp28 Nn In 	%line{193} %argrw{"wrr"}
	mul		$tmp29 $const18 $tmp28 	%argrw{"wrr"}
	mul		$tmp30 $tmp29 Nn 	%argrw{"wrr"}
	sub		___226_R In $tmp30 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:208
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	functioncall	$const19 73 	%line{208} %argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:203
#     float sqr(float x) { return x*x; }
	mul		$tmp31 $tmp26 $tmp26 	%line{203} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:208
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	div		$tmp32 $const5 $tmp31 	%line{208} %argrw{"wrr"}
	sub		$tmp33 $tmp32 $const5 	%argrw{"wrr"}
	mul		$tmp34 ___222_c ___222_c 	%argrw{"wrr"}
	add		___222_g $tmp33 $tmp34 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:209
#     if (g >= 0.0) {
	ge		$tmp35 ___222_g $const20 	%line{209} %argrw{"wrr"}
	if		$tmp35 117 120 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:210
#         g = sqrt (g);
	sqrt		___222_g ___222_g 	%line{210} %argrw{"wr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:211
#         float beta = g - c;
	sub		___224_beta ___222_g ___222_c 	%line{211} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:212
#         float F = (c * (g+c) - 1.0) / (c * beta + 1.0);
	add		$tmp36 ___222_g ___222_c 	%line{212} %argrw{"wrr"}
	mul		$tmp37 ___222_c $tmp36 	%argrw{"wrr"}
	sub		$tmp38 $tmp37 $const5 	%argrw{"wrr"}
	mul		$tmp39 ___222_c ___224_beta 	%argrw{"wrr"}
	add		$tmp40 $tmp39 $const5 	%argrw{"wrr"}
	div		___224_F $tmp38 $tmp40 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:213
#         F = 0.5 * (1.0 + sqr(F));
	functioncall	$const19 89 	%line{213} %argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:203
#     float sqr(float x) { return x*x; }
	mul		$tmp41 ___224_F ___224_F 	%line{203} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:213
#         F = 0.5 * (1.0 + sqr(F));
	add		$tmp42 $const5 $tmp41 	%line{213} %argrw{"wrr"}
	mul		___224_F $const10 $tmp42 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:214
#         F *= sqr (beta / (g+c));
	add		$tmp44 ___222_g ___222_c 	%line{214} %argrw{"wrr"}
	div		$tmp45 ___224_beta $tmp44 	%argrw{"wrr"}
	functioncall	$const19 95 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:203
#     float sqr(float x) { return x*x; }
	mul		$tmp43 $tmp45 $tmp45 	%line{203} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:214
#         F *= sqr (beta / (g+c));
	mul		___224_F ___224_F $tmp43 	%line{214} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:215
#         Kr = F;
	assign		___315_Kr ___224_F 	%line{215} %argrw{"wr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:216
#         Kt = (1.0 - Kr) * eta*eta;
	sub		$tmp46 $const5 ___315_Kr 	%line{216} %argrw{"wrr"}
	mul		$tmp47 $tmp46 $tmp26 	%argrw{"wrr"}
	mul		___315_Kt $tmp47 $tmp26 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:219
#         T = refract(I, N, eta);
	functioncall	$const21 117 	%line{219} %argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:195
#     float IdotN = dot (I, N);
	dot		___221_IdotN In Nn 	%line{195} %argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:196
#     float k = 1 - eta*eta * (1 - IdotN*IdotN);
	mul		$tmp48 $tmp26 $tmp26 	%line{196} %argrw{"wrr"}
	mul		$tmp49 ___221_IdotN ___221_IdotN 	%argrw{"wrr"}
	sub		$tmp50 $const5 $tmp49 	%argrw{"wrr"}
	mul		$tmp51 $tmp48 $tmp50 	%argrw{"wrr"}
	sub		___221_k $const5 $tmp51 	%argrw{"wrr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:197
#     return (k < 0) ? vector(0,0,0) : (eta*I - N * (eta*IdotN + sqrt(k)));
	lt		$tmp52 ___221_k $const7 	%line{197} %argrw{"wrr"}
	if		$tmp52 110 116 	%argrw{"r"}
	assign		___226_T $const22 	%argrw{"wr"}
	mul		$tmp53 $tmp26 In 	%argrw{"wrr"}
	mul		$tmp54 $tmp26 ___221_IdotN 	%argrw{"wrr"}
	sqrt		$tmp55 ___221_k 	%argrw{"wr"}
	add		$tmp56 $tmp54 $tmp55 	%argrw{"wrr"}
	mul		$tmp57 Nn $tmp56 	%argrw{"wrr"}
	sub		___226_T $tmp53 $tmp57 	%argrw{"wrr"}
	return
# C:/Program Files\\3Delight\\osl\\stdosl.h:222
#         Kr = 1.0;
	assign		___315_Kr $const5 	%line{222} %argrw{"wr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:223
#         Kt = 0.0;
	assign		___315_Kt $const20 	%line{223} %argrw{"wr"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:224
#         T = vector (0,0,0);
	assign		___226_T $const22 	%line{224} %argrw{"wr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:87
# 		
	max		___315_coating_alpha coating_roughness $const9 	%filename{"C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl"} %line{87} %argrw{"wrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:89
# 	}
	mul		$tmp58 bsdf_out ___315_Kt 	%line{89} %argrw{"wrr"}
	pow		$tmp60 ___315_coating_alpha $const6 	%argrw{"wrr"}
	functioncall	$const14 125 	%argrw{"r"}
# C:/Program Files\\3Delight\\osl\\stdosl.h:516
#         result = (xclamped - edge0) / (edge1 - edge0);
	closure		$tmp59 $const14 $const13 N $const22 $tmp60 $tmp60 ___315_coating_eta $const7 	%filename{"C:/Program Files\\3Delight\\osl\\stdosl.h"} %line{516} %argrw{"wrrrrrrrr"}
# C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl:89
# 	}
	mul		$tmp62 $tmp59 coating_color 	%filename{"C:\\Program Files\\MAXON\\CINEMA 4D R17\\plugins\\3Delight shaders\\OSL\\StandardMaterial.osl"} %line{89} %argrw{"wrr"}
	add		bsdf_out $tmp58 $tmp62 	%argrw{"wrr"}
	end
