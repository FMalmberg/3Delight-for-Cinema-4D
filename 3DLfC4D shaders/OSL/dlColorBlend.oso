OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0dev
# options: -q -o ..\build\win64-x64-release-free\2016.5\..\osl\dlColorBlend.oso -I../../osl_shaders
shader dlColorBlend
param	int	blendMode	0		%meta{string,label,"Blend Mode"} %meta{string,widget,"mapper"} %meta{string,options,"Over:0|Multiply:1|Darken (Min):2|Color Burn:3|Add:4|Screen:5|Lighten (Max):6|Color Dodge:7|Overlay:8|Soft Light:9|Hard Light:10|Add/Substract:11|Substract:12|Difference:13|Divide:14|Hue:15|Saturation:16|Color:17|Luminosity:18"}  %read{1,180} %write{2147483647,-1}
param	color	fg	1 1 1		%meta{string,label,"Foreground"} %meta{string,attribute,"foreground"}  %read{3,183} %write{2147483647,-1}
param	color	bg	0 0 0		%meta{string,label,"Background"} %meta{string,attribute,"background"}  %read{6,192} %write{2147483647,-1}
param	float	blend	1		%meta{string,label,"Factor"} %meta{string,niceName,"Blend Factor"}  %read{190,190} %write{2147483647,-1}
oparam	color	outColor	0 0 0		%read{193,195} %write{192,192}
oparam	float	outColorR	0		%meta{string,attribute,"outColorR"}  %read{2147483647,-1} %write{193,193}
oparam	float	outColorG	0		%meta{string,attribute,"outColorG"}  %read{2147483647,-1} %write{194,194}
oparam	float	outColorB	0		%meta{string,attribute,"outColorB"}  %read{2147483647,-1} %write{195,195}
local	color	blended_colors	%read{192,192} %write{0,188}
local	float	___358_fg_val	%read{27,27} %write{17,17}
local	float	___358_bg_val	%read{27,27} %write{26,26}
local	float	___362_fg_val	%read{67,67} %write{57,57}
local	float	___362_bg_val	%read{67,67} %write{66,66}
local	float	___364_bg_val	%read{87,87} %write{86,86}
local	float	___366_fg_val	%read{119,119} %write{118,118}
local	color	___371_bg_hsv	%read{158,159} %write{155,155}
local	color	___371_fg_hsv	%read{157,157} %write{156,156}
local	color	___372_bg_hsv	%read{166,168} %write{164,164}
local	color	___372_fg_hsv	%read{167,167} %write{165,165}
local	color	___373_bg_hsv	%read{177,177} %write{173,173}
local	color	___373_fg_hsv	%read{175,176} %write{174,174}
local	color	___374_bg_hsv	%read{184,184} %write{182,182}
local	color	___374_fg_hsv	%read{186,186} %write{183,183}
const	int	$const1	0		%read{0,193} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
const	int	$const2	1		%read{4,194} %write{2147483647,-1}
temp	int	$tmp2	%read{5,5} %write{4,4}
const	int	$const3	2		%read{7,195} %write{2147483647,-1}
temp	int	$tmp3	%read{8,8} %write{7,7}
const	string	$const4	"CIEluminance"		%read{9,129} %write{2147483647,-1}
temp	float	$tmp4	%read{11,11} %write{10,10}
const	float	$const5	0.212670997		%read{11,131} %write{2147483647,-1}
temp	float	$tmp5	%read{14,14} %write{11,11}
temp	float	$tmp6	%read{13,13} %write{12,12}
const	float	$const6	0.715160012		%read{13,133} %write{2147483647,-1}
temp	float	$tmp7	%read{14,14} %write{13,13}
temp	float	$tmp8	%read{17,17} %write{14,14}
temp	float	$tmp9	%read{16,16} %write{15,15}
const	float	$const7	0.0721689984		%read{16,136} %write{2147483647,-1}
temp	float	$tmp10	%read{17,17} %write{16,16}
temp	float	$tmp11	%read{20,20} %write{19,19}
temp	float	$tmp12	%read{23,23} %write{20,20}
temp	float	$tmp13	%read{22,22} %write{21,21}
temp	float	$tmp14	%read{23,23} %write{22,22}
temp	float	$tmp15	%read{26,26} %write{23,23}
temp	float	$tmp16	%read{25,25} %write{24,24}
temp	float	$tmp17	%read{26,26} %write{25,25}
temp	int	$tmp18	%read{28,28} %write{27,27}
const	int	$const8	3		%read{31,31} %write{2147483647,-1}
temp	int	$tmp19	%read{32,32} %write{31,31}
temp	color	$tmp20	%read{35,35} %write{33,33}
const	float	$const9	1		%read{33,190} %write{2147483647,-1}
temp	color	$tmp21	%read{35,35} %write{34,34}
const	color	$const10	0.00100000005 0.00100000005 0.00100000005		%read{34,151} %write{2147483647,-1}
temp	color	$tmp23	%read{36,36} %write{35,35}
const	int	$const11	4		%read{37,37} %write{2147483647,-1}
temp	int	$tmp24	%read{38,38} %write{37,37}
const	int	$const12	5		%read{40,40} %write{2147483647,-1}
temp	int	$tmp25	%read{41,41} %write{40,40}
const	string	$const13	"screen_blend"		%read{42,122} %write{2147483647,-1}
temp	color	$tmp26	%read{45,45} %write{43,43}
temp	color	$tmp27	%read{45,45} %write{44,44}
temp	color	$tmp28	%read{46,46} %write{45,45}
const	int	$const14	6		%read{47,47} %write{2147483647,-1}
temp	int	$tmp29	%read{48,48} %write{47,47}
temp	float	$tmp30	%read{51,51} %write{50,50}
temp	float	$tmp31	%read{54,54} %write{51,51}
temp	float	$tmp32	%read{53,53} %write{52,52}
temp	float	$tmp33	%read{54,54} %write{53,53}
temp	float	$tmp34	%read{57,57} %write{54,54}
temp	float	$tmp35	%read{56,56} %write{55,55}
temp	float	$tmp36	%read{57,57} %write{56,56}
temp	float	$tmp37	%read{60,60} %write{59,59}
temp	float	$tmp38	%read{63,63} %write{60,60}
temp	float	$tmp39	%read{62,62} %write{61,61}
temp	float	$tmp40	%read{63,63} %write{62,62}
temp	float	$tmp41	%read{66,66} %write{63,63}
temp	float	$tmp42	%read{65,65} %write{64,64}
temp	float	$tmp43	%read{66,66} %write{65,65}
temp	int	$tmp44	%read{68,68} %write{67,67}
const	int	$const15	7		%read{71,71} %write{2147483647,-1}
temp	int	$tmp45	%read{72,72} %write{71,71}
temp	color	$tmp46	%read{75,75} %write{74,74}
temp	color	$tmp47	%read{74,74} %write{73,73}
const	int	$const16	8		%read{76,76} %write{2147483647,-1}
temp	int	$tmp49	%read{77,77} %write{76,76}
temp	float	$tmp50	%read{80,80} %write{79,79}
temp	float	$tmp51	%read{83,83} %write{80,80}
temp	float	$tmp52	%read{82,82} %write{81,81}
temp	float	$tmp53	%read{83,83} %write{82,82}
temp	float	$tmp54	%read{86,86} %write{83,83}
temp	float	$tmp55	%read{85,85} %write{84,84}
temp	float	$tmp56	%read{86,86} %write{85,85}
const	float	$const17	0.5		%read{87,138} %write{2147483647,-1}
temp	int	$tmp57	%read{88,88} %write{87,87}
temp	color	$tmp58	%read{90,90} %write{89,89}
const	float	$const18	2		%read{90,92} %write{2147483647,-1}
temp	color	$tmp59	%read{92,92} %write{91,91}
temp	color	$tmp60	%read{94,94} %write{92,92}
temp	color	$tmp61	%read{94,94} %write{93,93}
temp	color	$tmp62	%read{95,95} %write{94,94}
const	int	$const19	9		%read{96,96} %write{2147483647,-1}
temp	int	$tmp63	%read{97,97} %write{96,96}
temp	color	$tmp64	%read{99,99} %write{98,98}
temp	color	$tmp65	%read{100,100} %write{99,99}
temp	color	$tmp66	%read{107,107} %write{100,100}
temp	color	$tmp67	%read{106,106} %write{105,105}
temp	color	$tmp68	%read{104,104} %write{102,102}
temp	color	$tmp69	%read{104,104} %write{103,103}
temp	color	$tmp70	%read{105,105} %write{104,104}
temp	color	$tmp71	%read{107,107} %write{106,106}
const	int	$const20	10		%read{108,108} %write{2147483647,-1}
temp	int	$tmp72	%read{109,109} %write{108,108}
temp	float	$tmp73	%read{112,112} %write{111,111}
temp	float	$tmp74	%read{115,115} %write{112,112}
temp	float	$tmp75	%read{114,114} %write{113,113}
temp	float	$tmp76	%read{115,115} %write{114,114}
temp	float	$tmp77	%read{118,118} %write{115,115}
temp	float	$tmp78	%read{117,117} %write{116,116}
temp	float	$tmp79	%read{118,118} %write{117,117}
temp	int	$tmp80	%read{120,120} %write{119,119}
temp	color	$tmp81	%read{125,125} %write{123,123}
temp	color	$tmp82	%read{125,125} %write{124,124}
temp	color	$tmp83	%read{126,126} %write{125,125}
const	int	$const21	11		%read{127,127} %write{2147483647,-1}
temp	int	$tmp84	%read{128,128} %write{127,127}
temp	float	$tmp85	%read{138,138} %write{137,137}
temp	float	$tmp86	%read{131,131} %write{130,130}
temp	float	$tmp87	%read{134,134} %write{131,131}
temp	float	$tmp88	%read{133,133} %write{132,132}
temp	float	$tmp89	%read{134,134} %write{133,133}
temp	float	$tmp90	%read{137,137} %write{134,134}
temp	float	$tmp91	%read{136,136} %write{135,135}
temp	float	$tmp92	%read{137,137} %write{136,136}
temp	int	$tmp93	%read{139,139} %write{138,138}
const	int	$const22	12		%read{142,142} %write{2147483647,-1}
temp	int	$tmp94	%read{143,143} %write{142,142}
const	int	$const23	13		%read{145,145} %write{2147483647,-1}
temp	int	$tmp95	%read{146,146} %write{145,145}
temp	color	$tmp96	%read{148,148} %write{147,147}
const	int	$const24	14		%read{149,149} %write{2147483647,-1}
temp	int	$tmp97	%read{150,150} %write{149,149}
temp	color	$tmp98	%read{152,152} %write{151,151}
const	int	$const25	15		%read{153,153} %write{2147483647,-1}
temp	int	$tmp100	%read{154,154} %write{153,153}
const	string	$const26	"rgb"		%read{155,188} %write{2147483647,-1}
const	string	$const27	"hsv"		%read{155,188} %write{2147483647,-1}
temp	color	$tmp101	%read{161,161} %write{160,160}
temp	float	$tmp102	%read{160,160} %write{157,157}
temp	float	$tmp103	%read{160,160} %write{158,158}
temp	float	$tmp104	%read{160,160} %write{159,159}
const	int	$const28	16		%read{162,162} %write{2147483647,-1}
temp	int	$tmp105	%read{163,163} %write{162,162}
temp	color	$tmp106	%read{170,170} %write{169,169}
temp	float	$tmp107	%read{169,169} %write{166,166}
temp	float	$tmp108	%read{169,169} %write{167,167}
temp	float	$tmp109	%read{169,169} %write{168,168}
const	int	$const29	17		%read{171,171} %write{2147483647,-1}
temp	int	$tmp110	%read{172,172} %write{171,171}
temp	color	$tmp111	%read{179,179} %write{178,178}
temp	float	$tmp112	%read{178,178} %write{175,175}
temp	float	$tmp113	%read{178,178} %write{176,176}
temp	float	$tmp114	%read{178,178} %write{177,177}
const	int	$const30	18		%read{180,180} %write{2147483647,-1}
temp	int	$tmp115	%read{181,181} %write{180,180}
temp	color	$tmp116	%read{188,188} %write{187,187}
temp	float	$tmp117	%read{187,187} %write{184,184}
temp	float	$tmp118	%read{187,187} %write{185,185}
temp	float	$tmp119	%read{187,187} %write{186,186}
temp	float	$tmp120	%read{192,192} %write{191,191}
const	float	$const31	0		%read{191,191} %write{2147483647,-1}
const	string	$const32	"clamp"		%read{189,189} %write{2147483647,-1}
temp	float	$tmp121	%read{191,191} %write{190,190}
code ___main___
# ../../osl_shaders/dlColorBlend.osl:67
# 	color blended_colors = 0;
	assign		blended_colors $const1 	%filename{"../../osl_shaders/dlColorBlend.osl"} %line{67} %argrw{"wr"}
# ../../osl_shaders/dlColorBlend.osl:69
# 	if(blendMode == 0) // Over
	eq		$tmp1 blendMode $const1 	%line{69} %argrw{"wrr"}
	if		$tmp1 4 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:71
# 		blended_colors = fg;
	assign		blended_colors fg 	%line{71} %argrw{"wr"}
# ../../osl_shaders/dlColorBlend.osl:73
# 	else if(blendMode == 1) // Multiply
	eq		$tmp2 blendMode $const2 	%line{73} %argrw{"wrr"}
	if		$tmp2 7 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:75
# 		blended_colors = bg * fg;
	mul		blended_colors bg fg 	%line{75} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:77
# 	else if(blendMode == 2) // Darken (Min)
	eq		$tmp3 blendMode $const3 	%line{77} %argrw{"wrr"}
	if		$tmp3 31 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:79
# 		float fg_val = CIEluminance(fg); 
	functioncall	$const4 18 	%line{79} %argrw{"r"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	compref		$tmp4 fg $const1 	%filename{"W:/r2d2\src\osl_shaders\utils.h"} %line{62} %argrw{"wrr"}
	mul		$tmp5 $tmp4 $const5 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	compref		$tmp6 fg $const2 	%line{63} %argrw{"wrr"}
	mul		$tmp7 $tmp6 $const6 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	add		$tmp8 $tmp5 $tmp7 	%line{62} %argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:64
# 		i_color[2] * 0.072169;
	compref		$tmp9 fg $const3 	%line{64} %argrw{"wrr"}
	mul		$tmp10 $tmp9 $const7 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	add		___358_fg_val $tmp8 $tmp10 	%line{63} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:80
# 		float bg_val = CIEluminance(bg); 
	functioncall	$const4 27 	%filename{"../../osl_shaders/dlColorBlend.osl"} %line{80} %argrw{"r"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	compref		$tmp11 bg $const1 	%filename{"W:/r2d2\src\osl_shaders\utils.h"} %line{62} %argrw{"wrr"}
	mul		$tmp12 $tmp11 $const5 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	compref		$tmp13 bg $const2 	%line{63} %argrw{"wrr"}
	mul		$tmp14 $tmp13 $const6 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	add		$tmp15 $tmp12 $tmp14 	%line{62} %argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:64
# 		i_color[2] * 0.072169;
	compref		$tmp16 bg $const3 	%line{64} %argrw{"wrr"}
	mul		$tmp17 $tmp16 $const7 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	add		___358_bg_val $tmp15 $tmp17 	%line{63} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:81
# 		blended_colors = (fg_val < bg_val) ? fg : bg;
	lt		$tmp18 ___358_fg_val ___358_bg_val 	%filename{"../../osl_shaders/dlColorBlend.osl"} %line{81} %argrw{"wrr"}
	if		$tmp18 30 31 	%argrw{"r"}
	assign		blended_colors fg 	%argrw{"wr"}
	assign		blended_colors bg 	%argrw{"wr"}
# ../../osl_shaders/dlColorBlend.osl:83
# 	else if(blendMode == 3) // Color Burn
	eq		$tmp19 blendMode $const8 	%line{83} %argrw{"wrr"}
	if		$tmp19 37 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:85
# 		blended_colors =  1 - ( ( 1 - bg ) / max(fg, color(0.001)) );		
	sub		$tmp20 $const9 bg 	%line{85} %argrw{"wrr"}
	max		$tmp21 fg $const10 	%argrw{"wrr"}
	div		$tmp23 $tmp20 $tmp21 	%argrw{"wrr"}
	sub		blended_colors $const9 $tmp23 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:87
# 	else if(blendMode == 4) // Add
	eq		$tmp24 blendMode $const11 	%line{87} %argrw{"wrr"}
	if		$tmp24 40 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:89
# 		blended_colors = bg + fg;
	add		blended_colors bg fg 	%line{89} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:91
# 	else if(blendMode == 5) // Screen
	eq		$tmp25 blendMode $const12 	%line{91} %argrw{"wrr"}
	if		$tmp25 47 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:93
# 		blended_colors = screen_blend(fg,bg);
	functioncall	$const13 47 	%line{93} %argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:16
# 	return 1 - ( (1 - fg) * (1 - bg) );
	sub		$tmp26 $const9 fg 	%line{16} %argrw{"wrr"}
	sub		$tmp27 $const9 bg 	%argrw{"wrr"}
	mul		$tmp28 $tmp26 $tmp27 	%argrw{"wrr"}
	sub		blended_colors $const9 $tmp28 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:95
# 	else if(blendMode == 6) // Lighten (Max)
	eq		$tmp29 blendMode $const14 	%line{95} %argrw{"wrr"}
	if		$tmp29 71 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:97
# 		float fg_val = CIEluminance(fg); 
	functioncall	$const4 58 	%line{97} %argrw{"r"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	compref		$tmp30 fg $const1 	%filename{"W:/r2d2\src\osl_shaders\utils.h"} %line{62} %argrw{"wrr"}
	mul		$tmp31 $tmp30 $const5 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	compref		$tmp32 fg $const2 	%line{63} %argrw{"wrr"}
	mul		$tmp33 $tmp32 $const6 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	add		$tmp34 $tmp31 $tmp33 	%line{62} %argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:64
# 		i_color[2] * 0.072169;
	compref		$tmp35 fg $const3 	%line{64} %argrw{"wrr"}
	mul		$tmp36 $tmp35 $const7 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	add		___362_fg_val $tmp34 $tmp36 	%line{63} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:98
# 		float bg_val = CIEluminance(bg); 
	functioncall	$const4 67 	%filename{"../../osl_shaders/dlColorBlend.osl"} %line{98} %argrw{"r"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	compref		$tmp37 bg $const1 	%filename{"W:/r2d2\src\osl_shaders\utils.h"} %line{62} %argrw{"wrr"}
	mul		$tmp38 $tmp37 $const5 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	compref		$tmp39 bg $const2 	%line{63} %argrw{"wrr"}
	mul		$tmp40 $tmp39 $const6 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	add		$tmp41 $tmp38 $tmp40 	%line{62} %argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:64
# 		i_color[2] * 0.072169;
	compref		$tmp42 bg $const3 	%line{64} %argrw{"wrr"}
	mul		$tmp43 $tmp42 $const7 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	add		___362_bg_val $tmp41 $tmp43 	%line{63} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:99
# 		blended_colors = (fg_val > bg_val) ? fg : bg;
	gt		$tmp44 ___362_fg_val ___362_bg_val 	%filename{"../../osl_shaders/dlColorBlend.osl"} %line{99} %argrw{"wrr"}
	if		$tmp44 70 71 	%argrw{"r"}
	assign		blended_colors fg 	%argrw{"wr"}
	assign		blended_colors bg 	%argrw{"wr"}
# ../../osl_shaders/dlColorBlend.osl:101
# 	else if(blendMode == 7) // Color Dodge
	eq		$tmp45 blendMode $const15 	%line{101} %argrw{"wrr"}
	if		$tmp45 76 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:103
# 		blended_colors = bg / max( 1 - fg, color(0.001) );
	sub		$tmp47 $const9 fg 	%line{103} %argrw{"wrr"}
	max		$tmp46 $tmp47 $const10 	%argrw{"wrr"}
	div		blended_colors bg $tmp46 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:105
# 	else if(blendMode == 8) // Overlay
	eq		$tmp49 blendMode $const16 	%line{105} %argrw{"wrr"}
	if		$tmp49 96 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:107
# 		float bg_val = CIEluminance(bg);
	functioncall	$const4 87 	%line{107} %argrw{"r"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	compref		$tmp50 bg $const1 	%filename{"W:/r2d2\src\osl_shaders\utils.h"} %line{62} %argrw{"wrr"}
	mul		$tmp51 $tmp50 $const5 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	compref		$tmp52 bg $const2 	%line{63} %argrw{"wrr"}
	mul		$tmp53 $tmp52 $const6 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	add		$tmp54 $tmp51 $tmp53 	%line{62} %argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:64
# 		i_color[2] * 0.072169;
	compref		$tmp55 bg $const3 	%line{64} %argrw{"wrr"}
	mul		$tmp56 $tmp55 $const7 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	add		___364_bg_val $tmp54 $tmp56 	%line{63} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:108
# 		blended_colors = (bg_val < 0.5) ? (bg * fg * 2) : (1 - 2 * (1 - fg) * (1 - bg)) ;
	lt		$tmp57 ___364_bg_val $const17 	%filename{"../../osl_shaders/dlColorBlend.osl"} %line{108} %argrw{"wrr"}
	if		$tmp57 91 96 	%argrw{"r"}
	mul		$tmp58 bg fg 	%argrw{"wrr"}
	mul		blended_colors $tmp58 $const18 	%argrw{"wrr"}
	sub		$tmp59 $const9 fg 	%argrw{"wrr"}
	mul		$tmp60 $const18 $tmp59 	%argrw{"wrr"}
	sub		$tmp61 $const9 bg 	%argrw{"wrr"}
	mul		$tmp62 $tmp60 $tmp61 	%argrw{"wrr"}
	sub		blended_colors $const9 $tmp62 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:110
# 	else if(blendMode == 9) // Soft Light
	eq		$tmp63 blendMode $const19 	%line{110} %argrw{"wrr"}
	if		$tmp63 108 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:112
# 		blended_colors = (1 - fg) * bg * fg 
	sub		$tmp64 $const9 fg 	%line{112} %argrw{"wrr"}
	mul		$tmp65 $tmp64 bg 	%argrw{"wrr"}
	mul		$tmp66 $tmp65 fg 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:113
# 			+ fg * screen_blend(fg,bg);
	functioncall	$const13 106 	%line{113} %argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:16
# 	return 1 - ( (1 - fg) * (1 - bg) );
	sub		$tmp68 $const9 fg 	%line{16} %argrw{"wrr"}
	sub		$tmp69 $const9 bg 	%argrw{"wrr"}
	mul		$tmp70 $tmp68 $tmp69 	%argrw{"wrr"}
	sub		$tmp67 $const9 $tmp70 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:113
# 			+ fg * screen_blend(fg,bg);
	mul		$tmp71 fg $tmp67 	%line{113} %argrw{"wrr"}
	add		blended_colors $tmp66 $tmp71 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:115
# 	else if(blendMode == 10) // Hard Light
	eq		$tmp72 blendMode $const20 	%line{115} %argrw{"wrr"}
	if		$tmp72 127 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:117
# 		float fg_val = CIEluminance(fg);
	functioncall	$const4 119 	%line{117} %argrw{"r"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	compref		$tmp73 fg $const1 	%filename{"W:/r2d2\src\osl_shaders\utils.h"} %line{62} %argrw{"wrr"}
	mul		$tmp74 $tmp73 $const5 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	compref		$tmp75 fg $const2 	%line{63} %argrw{"wrr"}
	mul		$tmp76 $tmp75 $const6 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	add		$tmp77 $tmp74 $tmp76 	%line{62} %argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:64
# 		i_color[2] * 0.072169;
	compref		$tmp78 fg $const3 	%line{64} %argrw{"wrr"}
	mul		$tmp79 $tmp78 $const7 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	add		___366_fg_val $tmp77 $tmp79 	%line{63} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:118
# 		blended_colors = (fg_val < 0.5) ? bg * fg
	lt		$tmp80 ___366_fg_val $const17 	%filename{"../../osl_shaders/dlColorBlend.osl"} %line{118} %argrw{"wrr"}
	if		$tmp80 122 127 	%argrw{"r"}
	mul		blended_colors bg fg 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:119
# 			: screen_blend(fg,bg);		
	functioncall	$const13 127 	%line{119} %argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:16
# 	return 1 - ( (1 - fg) * (1 - bg) );
	sub		$tmp81 $const9 fg 	%line{16} %argrw{"wrr"}
	sub		$tmp82 $const9 bg 	%argrw{"wrr"}
	mul		$tmp83 $tmp81 $tmp82 	%argrw{"wrr"}
	sub		blended_colors $const9 $tmp83 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:121
# 	else if(blendMode == 11) // Add Sub
	eq		$tmp84 blendMode $const21 	%line{121} %argrw{"wrr"}
	if		$tmp84 142 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:123
# 		blended_colors = (CIEluminance(fg)>0.5) ?
	functioncall	$const4 138 	%line{123} %argrw{"r"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	compref		$tmp86 fg $const1 	%filename{"W:/r2d2\src\osl_shaders\utils.h"} %line{62} %argrw{"wrr"}
	mul		$tmp87 $tmp86 $const5 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	compref		$tmp88 fg $const2 	%line{63} %argrw{"wrr"}
	mul		$tmp89 $tmp88 $const6 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:62
# 		i_color[0] * 0.212671 +
	add		$tmp90 $tmp87 $tmp89 	%line{62} %argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:64
# 		i_color[2] * 0.072169;
	compref		$tmp91 fg $const3 	%line{64} %argrw{"wrr"}
	mul		$tmp92 $tmp91 $const7 	%argrw{"wrr"}
# W:/r2d2\src\osl_shaders\utils.h:63
# 		i_color[1] * 0.715160 +
	add		$tmp85 $tmp90 $tmp92 	%line{63} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:123
# 		blended_colors = (CIEluminance(fg)>0.5) ?
	gt		$tmp93 $tmp85 $const17 	%filename{"../../osl_shaders/dlColorBlend.osl"} %line{123} %argrw{"wrr"}
	if		$tmp93 141 142 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:124
# 			bg + fg :
	add		blended_colors bg fg 	%line{124} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:125
# 			bg - fg ;
	sub		blended_colors bg fg 	%line{125} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:127
# 	else if(blendMode == 12) // Substract
	eq		$tmp94 blendMode $const22 	%line{127} %argrw{"wrr"}
	if		$tmp94 145 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:129
# 		blended_colors = bg - fg;
	sub		blended_colors bg fg 	%line{129} %argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:131
# 	else if(blendMode == 13) // Difference
	eq		$tmp95 blendMode $const23 	%line{131} %argrw{"wrr"}
	if		$tmp95 149 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:133
# 		blended_colors = abs(bg - fg);
	sub		$tmp96 bg fg 	%line{133} %argrw{"wrr"}
	abs		blended_colors $tmp96 	%argrw{"wr"}
# ../../osl_shaders/dlColorBlend.osl:135
# 	else if(blendMode == 14) // Divide
	eq		$tmp97 blendMode $const24 	%line{135} %argrw{"wrr"}
	if		$tmp97 153 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:137
# 		blended_colors = bg / max(fg, color(0.001) );
	max		$tmp98 fg $const10 	%line{137} %argrw{"wrr"}
	div		blended_colors bg $tmp98 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:139
# 	else if(blendMode == 15) // Hue
	eq		$tmp100 blendMode $const25 	%line{139} %argrw{"wrr"}
	if		$tmp100 162 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:141
# 		color bg_hsv = transformc("rgb", "hsv", bg);
	transformc	___371_bg_hsv $const26 $const27 bg 	%line{141} %argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:142
# 		color fg_hsv = transformc("rgb", "hsv", fg);
	transformc	___371_fg_hsv $const26 $const27 fg 	%line{142} %argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:143
# 		blended_colors = transformc("hsv", "rgb", color(fg_hsv[0],bg_hsv[1],bg_hsv[2]));
	compref		$tmp102 ___371_fg_hsv $const1 	%line{143} %argrw{"wrr"}
	compref		$tmp103 ___371_bg_hsv $const2 	%argrw{"wrr"}
	compref		$tmp104 ___371_bg_hsv $const3 	%argrw{"wrr"}
	color		$tmp101 $tmp102 $tmp103 $tmp104 	%argrw{"wrrr"}
	transformc	blended_colors $const27 $const26 $tmp101 	%argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:145
# 	else if(blendMode == 16) // Saturation
	eq		$tmp105 blendMode $const28 	%line{145} %argrw{"wrr"}
	if		$tmp105 171 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:147
# 		color bg_hsv = transformc("rgb", "hsv", bg);
	transformc	___372_bg_hsv $const26 $const27 bg 	%line{147} %argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:148
# 		color fg_hsv = transformc("rgb", "hsv", fg);
	transformc	___372_fg_hsv $const26 $const27 fg 	%line{148} %argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:149
# 		blended_colors = transformc("hsv", "rgb", color(bg_hsv[0],fg_hsv[1],bg_hsv[2]));
	compref		$tmp107 ___372_bg_hsv $const1 	%line{149} %argrw{"wrr"}
	compref		$tmp108 ___372_fg_hsv $const2 	%argrw{"wrr"}
	compref		$tmp109 ___372_bg_hsv $const3 	%argrw{"wrr"}
	color		$tmp106 $tmp107 $tmp108 $tmp109 	%argrw{"wrrr"}
	transformc	blended_colors $const27 $const26 $tmp106 	%argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:151
# 	else if(blendMode == 17) // Color
	eq		$tmp110 blendMode $const29 	%line{151} %argrw{"wrr"}
	if		$tmp110 180 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:153
# 		color bg_hsv = transformc("rgb", "hsv", bg);
	transformc	___373_bg_hsv $const26 $const27 bg 	%line{153} %argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:154
# 		color fg_hsv = transformc("rgb", "hsv", fg);
	transformc	___373_fg_hsv $const26 $const27 fg 	%line{154} %argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:155
# 		blended_colors = transformc("hsv", "rgb", color(fg_hsv[0],fg_hsv[1],bg_hsv[2]));
	compref		$tmp112 ___373_fg_hsv $const1 	%line{155} %argrw{"wrr"}
	compref		$tmp113 ___373_fg_hsv $const2 	%argrw{"wrr"}
	compref		$tmp114 ___373_bg_hsv $const3 	%argrw{"wrr"}
	color		$tmp111 $tmp112 $tmp113 $tmp114 	%argrw{"wrrr"}
	transformc	blended_colors $const27 $const26 $tmp111 	%argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:157
# 	else if(blendMode == 18) // Luminosity
	eq		$tmp115 blendMode $const30 	%line{157} %argrw{"wrr"}
	if		$tmp115 189 189 	%argrw{"r"}
# ../../osl_shaders/dlColorBlend.osl:159
# 		color bg_hsv = transformc("rgb", "hsv", bg);
	transformc	___374_bg_hsv $const26 $const27 bg 	%line{159} %argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:160
# 		color fg_hsv = transformc("rgb", "hsv", fg);
	transformc	___374_fg_hsv $const26 $const27 fg 	%line{160} %argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:161
# 		blended_colors = transformc("hsv", "rgb", color(bg_hsv[0],bg[1],fg_hsv[2]));
	compref		$tmp117 ___374_bg_hsv $const1 	%line{161} %argrw{"wrr"}
	compref		$tmp118 bg $const2 	%argrw{"wrr"}
	compref		$tmp119 ___374_fg_hsv $const3 	%argrw{"wrr"}
	color		$tmp116 $tmp117 $tmp118 $tmp119 	%argrw{"wrrr"}
	transformc	blended_colors $const27 $const26 $tmp116 	%argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:164
# 	outColor = mix(bg, blended_colors, clamp(blend,0,1) );
	functioncall	$const32 192 	%line{164} %argrw{"r"}
# W:/r2d2\src\3delight\win64-x64-release-free\osl\stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp121 blend $const9 	%filename{"W:/r2d2\src\3delight\win64-x64-release-free\osl\stdosl.h"} %line{163} %argrw{"wrr"}
	max		$tmp120 $tmp121 $const31 	%argrw{"wrr"}
# ../../osl_shaders/dlColorBlend.osl:164
# 	outColor = mix(bg, blended_colors, clamp(blend,0,1) );
	mix		outColor bg blended_colors $tmp120 	%filename{"../../osl_shaders/dlColorBlend.osl"} %line{164} %argrw{"wrrr"}
# ../../osl_shaders/dlColorBlend.osl:166
# 	ASSIGN_COMPONENTS( outColor );	
	compref		outColorR outColor $const1 	%line{166} %argrw{"wrr"}
	compref		outColorG outColor $const2 	%argrw{"wrr"}
	compref		outColorB outColor $const3 	%argrw{"wrr"}
	end
