OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0dev
# options: -q -o ..\build\win64-x64-release-free\2016.5\..\osl\environmentLight.oso -I../../osl_shaders
surface environmentLight	%meta{string[1],tags,"environment"} 
param	string	image	""		%meta{string,label,"Image Name"} %meta{string,widget,"filename"} %meta{int,texturefile,1}  %read{55,94} %write{2147483647,-1}
param	int	mapping	0		%meta{string,label,"Mapping"} %meta{string,widget,"mapper"} %meta{string,options,"Spherical (latlong):0|Angular:1"}  %read{58,58} %write{2147483647,-1}
param	float	intensity	1		%meta{string,label,"Intensity"} %meta{float,slidermin,0} %meta{float,slidermax,10}  %read{0,0} %write{2147483647,-1}
param	float	exposure	0		%meta{string,label,"Exposure"} %meta{float,slidermin,-5} %meta{float,slidermax,10}  %read{1,1} %write{2147483647,-1}
param	color	i_color	0.5 0.5 0.5		%meta{string,attribute,"color"} %meta{string,label,"Color"}  %read{0,0} %write{2147483647,-1}
param	int	contributions	1		%meta{string,page,"Contributions"} %meta{string,label,"Enable"} %meta{string,widget,"null"}  %read{6,6} %write{2147483647,-1}
param	float	diffuse_contribution	1		%meta{string,page,"Contributions"} %meta{string,label,"Diffuse"} %meta{float,slidermin,0} %meta{float,slidermax,3} %meta{float,min,0} %meta{string,lock_left,"contributions"} %meta{string,lock_op,"notEqualTo"} %meta{int,lock_right,1}  %read{18,25} %write{2147483647,-1}
param	float	specular_contribution	1		%meta{string,page,"Contributions"} %meta{string,label,"Specular"} %meta{float,slidermin,0} %meta{float,slidermax,3} %meta{float,min,0} %meta{string,lock_left,"contributions"} %meta{string,lock_op,"notEqualTo"} %meta{int,lock_right,1}  %read{34,41} %write{2147483647,-1}
param	float	hair_contribution	1		%meta{string,maya_attribute,"_3delight_hairContribution"} %meta{string,page,"Contributions"} %meta{string,label,"Hair"} %meta{float,slidermin,0} %meta{float,slidermax,3} %meta{float,min,0} %meta{string,lock_left,"contributions"} %meta{string,lock_op,"notEqualTo"} %meta{int,lock_right,1}  %read{26,33} %write{2147483647,-1}
param	float	volume_contribution	1		%meta{string,maya_attribute,"_3delight_volumeContribution"} %meta{string,page,"Contributions"} %meta{string,label,"Volume"} %meta{float,slidermin,0} %meta{float,slidermax,3} %meta{float,min,0} %meta{string,lock_left,"contributions"} %meta{string,lock_op,"notEqualTo"} %meta{int,lock_right,1}  %read{42,49} %write{2147483647,-1}
param	float	background_contribution	1		%meta{string,page,"Contributions"} %meta{string,label,"Background"} %meta{float,slidermin,0} %meta{float,slidermax,3} %meta{float,min,0} %meta{string,lock_left,"contributions"} %meta{string,lock_op,"notEqualTo"} %meta{int,lock_right,1}  %read{10,17} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{53,100}
global	vector	I	%read{57,57} %write{2147483647,-1} %derivs
global	closure color	Ci	%read{100,100} %write{52,99}
local	color	result	%read{3,97} %write{2,95}
local	vector	___323_R	%read{60,85} %write{57,57} %derivs
local	float	___323_s	%read{94,94} %write{76,91} %derivs
local	float	___323_t	%read{94,94} %write{77,93} %derivs
local	float	___324_signed_s	%read{76,76} %write{64,64} %derivs
local	float	___324_signed_t	%read{77,77} %write{75,75} %derivs
local	float	___325_signed_s	%read{90,90} %write{83,83} %derivs
local	float	___325_signed_t	%read{92,92} %write{89,89} %derivs
temp	color	$tmp1	%read{2,2} %write{0,0}
temp	float	$tmp2	%read{2,2} %write{1,1}
const	int	$const1	2		%read{61,85} %write{2147483647,-1}
const	float	$const2	2		%read{1,87} %write{2147483647,-1}
const	float	$const3	0		%read{3,50} %write{2147483647,-1}
temp	int	$tmp3	%read{4,4} %write{3,3}
temp	int	$tmp4	%read{5,9} %write{4,8}
const	int	$const4	0		%read{4,78} %write{2147483647,-1}
const	int	$const5	1		%read{6,84} %write{2147483647,-1}
temp	int	$tmp5	%read{7,7} %write{6,6}
temp	int	$tmp6	%read{8,8} %write{7,7}
const	float	$const6	1		%read{10,92} %write{2147483647,-1}
temp	int	$tmp7	%read{11,11} %write{10,10}
temp	int	$tmp8	%read{12,16} %write{11,15}
temp	int	$tmp9	%read{14,14} %write{13,13}
const	string	$const7	"camera"		%read{13,13} %write{2147483647,-1}
temp	int	$tmp10	%read{15,15} %write{14,14}
temp	int	$tmp11	%read{19,19} %write{18,18}
temp	int	$tmp12	%read{20,24} %write{19,23}
temp	int	$tmp13	%read{22,22} %write{21,21}
const	string	$const8	"diffuse"		%read{21,21} %write{2147483647,-1}
temp	int	$tmp14	%read{23,23} %write{22,22}
temp	int	$tmp15	%read{27,27} %write{26,26}
temp	int	$tmp16	%read{28,32} %write{27,31}
temp	int	$tmp17	%read{30,30} %write{29,29}
const	string	$const9	"hair"		%read{29,29} %write{2147483647,-1}
temp	int	$tmp18	%read{31,31} %write{30,30}
temp	int	$tmp19	%read{35,35} %write{34,34}
temp	int	$tmp20	%read{36,40} %write{35,39}
temp	int	$tmp21	%read{38,38} %write{37,37}
const	string	$const10	"specular"		%read{37,37} %write{2147483647,-1}
temp	int	$tmp22	%read{39,39} %write{38,38}
temp	int	$tmp23	%read{43,43} %write{42,42}
temp	int	$tmp24	%read{44,48} %write{43,47}
temp	int	$tmp25	%read{46,46} %write{45,45}
const	string	$const11	"volume"		%read{45,45} %write{2147483647,-1}
temp	int	$tmp26	%read{47,47} %write{46,46}
temp	int	$tmp27	%read{51,51} %write{50,50}
const	string	$const12	""		%read{55,55} %write{2147483647,-1}
temp	int	$tmp28	%read{56,56} %write{55,55}
temp	int	$tmp29	%read{59,59} %write{58,58}
temp	float	$tmp30	%read{64,64} %write{62,62} %derivs
temp	float	$tmp31	%read{62,62} %write{60,60} %derivs
temp	float	$tmp32	%read{62,62} %write{61,61} %derivs
const	float	$const13	3.14159274		%read{63,75} %write{2147483647,-1}
temp	float	$tmp33	%read{64,64} %write{63,63} %derivs
temp	float	$tmp34	%read{75,75} %write{74,74} %derivs
temp	float	$tmp35	%read{74,74} %write{65,65} %derivs
temp	float	$tmp36	%read{74,74} %write{73,73} %derivs
temp	float	$tmp37	%read{68,68} %write{66,66} %derivs
temp	float	$tmp38	%read{68,68} %write{67,67} %derivs
temp	float	$tmp39	%read{72,72} %write{68,68} %derivs
temp	float	$tmp40	%read{71,71} %write{69,69} %derivs
temp	float	$tmp41	%read{71,71} %write{70,70} %derivs
temp	float	$tmp42	%read{72,72} %write{71,71} %derivs
temp	float	$tmp43	%read{73,73} %write{72,72} %derivs
const	float	$const14	0.5		%read{76,93} %write{2147483647,-1}
temp	float	$tmp44	%read{83,83} %write{78,78} %derivs
temp	float	$tmp45	%read{83,83} %write{82,82} %derivs
temp	float	$tmp46	%read{80,80} %write{79,79} %derivs
temp	float	$tmp47	%read{81,81} %write{80,80} %derivs
temp	float	$tmp48	%read{82,82} %write{81,81} %derivs
temp	float	$tmp49	%read{89,89} %write{84,84} %derivs
temp	float	$tmp50	%read{89,89} %write{88,88} %derivs
temp	float	$tmp51	%read{86,86} %write{85,85} %derivs
temp	float	$tmp52	%read{87,87} %write{86,86} %derivs
temp	float	$tmp53	%read{88,88} %write{87,87} %derivs
temp	float	$tmp54	%read{91,91} %write{90,90} %derivs
temp	float	$tmp55	%read{93,93} %write{92,92} %derivs
temp	color	$tmp56	%read{95,95} %write{94,94}
temp	closure color	$tmp57	%read{97,97} %write{96,96}
const	string	$const15	"emission"		%read{96,96} %write{2147483647,-1}
temp	closure color	$tmp58	%read{99,99} %write{97,97}
temp	closure color	$tmp59	%read{99,99} %write{98,98}
const	string	$const16	"transparent"		%read{98,98} %write{2147483647,-1}
code ___main___
# ../../osl_shaders/environmentLight.osl:102
# 	color result = i_color * intensity * pow(2, exposure );
	mul		$tmp1 i_color intensity 	%filename{"../../osl_shaders/environmentLight.osl"} %line{102} %argrw{"wrr"}
	pow		$tmp2 $const2 exposure 	%argrw{"wrr"}
	mul		result $tmp1 $tmp2 	%argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:108
# 	if( result!=0.0 && contributions == 1 )
	neq		$tmp3 result $const3 	%line{108} %argrw{"wrr"}
	neq		$tmp4 $tmp3 $const4 	%argrw{"wrr"}
	if		$tmp4 9 9 	%argrw{"r"}
	eq		$tmp5 contributions $const5 	%argrw{"wrr"}
	neq		$tmp6 $tmp5 $const4 	%argrw{"wrr"}
	assign		$tmp4 $tmp6 	%argrw{"wr"}
	if		$tmp4 50 50 	%argrw{"r"}
# ../../osl_shaders/environmentLight.osl:110
# 		if( background_contribution!=1.0 && raytype("camera") )
	neq		$tmp7 background_contribution $const6 	%line{110} %argrw{"wrr"}
	neq		$tmp8 $tmp7 $const4 	%argrw{"wrr"}
	if		$tmp8 16 16 	%argrw{"r"}
	raytype		$tmp9 $const7 	%argrw{"wr"}
	neq		$tmp10 $tmp9 $const4 	%argrw{"wrr"}
	assign		$tmp8 $tmp10 	%argrw{"wr"}
	if		$tmp8 18 50 	%argrw{"r"}
# ../../osl_shaders/environmentLight.osl:111
# 			result *= background_contribution;
	mul		result result background_contribution 	%line{111} %argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:112
# 		else if( diffuse_contribution!=1.0 && raytype("diffuse") )
	neq		$tmp11 diffuse_contribution $const6 	%line{112} %argrw{"wrr"}
	neq		$tmp12 $tmp11 $const4 	%argrw{"wrr"}
	if		$tmp12 24 24 	%argrw{"r"}
	raytype		$tmp13 $const8 	%argrw{"wr"}
	neq		$tmp14 $tmp13 $const4 	%argrw{"wrr"}
	assign		$tmp12 $tmp14 	%argrw{"wr"}
	if		$tmp12 26 50 	%argrw{"r"}
# ../../osl_shaders/environmentLight.osl:113
# 			result *= diffuse_contribution;
	mul		result result diffuse_contribution 	%line{113} %argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:114
# 		else if( hair_contribution!=1.0 && raytype("hair") )
	neq		$tmp15 hair_contribution $const6 	%line{114} %argrw{"wrr"}
	neq		$tmp16 $tmp15 $const4 	%argrw{"wrr"}
	if		$tmp16 32 32 	%argrw{"r"}
	raytype		$tmp17 $const9 	%argrw{"wr"}
	neq		$tmp18 $tmp17 $const4 	%argrw{"wrr"}
	assign		$tmp16 $tmp18 	%argrw{"wr"}
	if		$tmp16 34 50 	%argrw{"r"}
# ../../osl_shaders/environmentLight.osl:115
# 			result *= hair_contribution;
	mul		result result hair_contribution 	%line{115} %argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:116
# 		else if( specular_contribution!=1.0 && raytype("specular") )
	neq		$tmp19 specular_contribution $const6 	%line{116} %argrw{"wrr"}
	neq		$tmp20 $tmp19 $const4 	%argrw{"wrr"}
	if		$tmp20 40 40 	%argrw{"r"}
	raytype		$tmp21 $const10 	%argrw{"wr"}
	neq		$tmp22 $tmp21 $const4 	%argrw{"wrr"}
	assign		$tmp20 $tmp22 	%argrw{"wr"}
	if		$tmp20 42 50 	%argrw{"r"}
# ../../osl_shaders/environmentLight.osl:117
# 			result *= specular_contribution;
	mul		result result specular_contribution 	%line{117} %argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:118
# 		else if( volume_contribution!=1.0 && raytype("volume") )
	neq		$tmp23 volume_contribution $const6 	%line{118} %argrw{"wrr"}
	neq		$tmp24 $tmp23 $const4 	%argrw{"wrr"}
	if		$tmp24 48 48 	%argrw{"r"}
	raytype		$tmp25 $const11 	%argrw{"wr"}
	neq		$tmp26 $tmp25 $const4 	%argrw{"wrr"}
	assign		$tmp24 $tmp26 	%argrw{"wr"}
	if		$tmp24 50 50 	%argrw{"r"}
# ../../osl_shaders/environmentLight.osl:119
# 			result *= volume_contribution;
	mul		result result volume_contribution 	%line{119} %argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:122
# 	if( result == 0.0 )
	eq		$tmp27 result $const3 	%line{122} %argrw{"wrr"}
	if		$tmp27 55 55 	%argrw{"r"}
# ../../osl_shaders/environmentLight.osl:124
# 		Ci = 0; out = 0;
	assign		Ci $const4 	%line{124} %argrw{"wr"}
	assign		out $const4 	%argrw{"wr"}
# ../../osl_shaders/environmentLight.osl:125
# 		return;
	exit	%line{125}
# ../../osl_shaders/environmentLight.osl:131
# 	if( image != "" )
	neq		$tmp28 image $const12 	%line{131} %argrw{"wrr"}
	if		$tmp28 96 96 	%argrw{"r"}
# ../../osl_shaders/environmentLight.osl:133
# 		vector R = normalize( I );
	normalize	___323_R I 	%line{133} %argrw{"wr"}
# ../../osl_shaders/environmentLight.osl:136
# 		if( mapping == 0 )
	eq		$tmp29 mapping $const4 	%line{136} %argrw{"wrr"}
	if		$tmp29 78 94 	%argrw{"r"}
# ../../osl_shaders/environmentLight.osl:139
# 			float signed_s = atan2( R[0], R[2] ) / (2 * M_PI);
	compref		$tmp31 ___323_R $const4 	%line{139} %argrw{"wrr"}
	compref		$tmp32 ___323_R $const1 	%argrw{"wrr"}
	atan2		$tmp30 $tmp31 $tmp32 	%argrw{"wrr"}
	mul		$tmp33 $const2 $const13 	%argrw{"wrr"}
	div		___324_signed_s $tmp30 $tmp33 	%argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:140
# 			float signed_t = atan2( R[1], sqrt( R[0]*R[0] + R[2]*R[2] ) ) / M_PI;
	compref		$tmp35 ___323_R $const5 	%line{140} %argrw{"wrr"}
	compref		$tmp37 ___323_R $const4 	%argrw{"wrr"}
	compref		$tmp38 ___323_R $const4 	%argrw{"wrr"}
	mul		$tmp39 $tmp37 $tmp38 	%argrw{"wrr"}
	compref		$tmp40 ___323_R $const1 	%argrw{"wrr"}
	compref		$tmp41 ___323_R $const1 	%argrw{"wrr"}
	mul		$tmp42 $tmp40 $tmp41 	%argrw{"wrr"}
	add		$tmp43 $tmp39 $tmp42 	%argrw{"wrr"}
	sqrt		$tmp36 $tmp43 	%argrw{"wr"}
	atan2		$tmp34 $tmp35 $tmp36 	%argrw{"wrr"}
	div		___324_signed_t $tmp34 $const13 	%argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:142
# 			s = signed_s + 0.5;
	add		___323_s ___324_signed_s $const14 	%line{142} %argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:143
# 			t = signed_t + 0.5;
	add		___323_t ___324_signed_t $const14 	%line{143} %argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:148
# 			float signed_s = R[0] / sqrt( 2.0 * (R[2]+1) );
	compref		$tmp44 ___323_R $const4 	%line{148} %argrw{"wrr"}
	compref		$tmp46 ___323_R $const1 	%argrw{"wrr"}
	add		$tmp47 $tmp46 $const6 	%argrw{"wrr"}
	mul		$tmp48 $const2 $tmp47 	%argrw{"wrr"}
	sqrt		$tmp45 $tmp48 	%argrw{"wr"}
	div		___325_signed_s $tmp44 $tmp45 	%argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:149
# 			float signed_t = R[1] / sqrt( 2.0 * (R[2]+1) );
	compref		$tmp49 ___323_R $const5 	%line{149} %argrw{"wrr"}
	compref		$tmp51 ___323_R $const1 	%argrw{"wrr"}
	add		$tmp52 $tmp51 $const6 	%argrw{"wrr"}
	mul		$tmp53 $const2 $tmp52 	%argrw{"wrr"}
	sqrt		$tmp50 $tmp53 	%argrw{"wr"}
	div		___325_signed_t $tmp49 $tmp50 	%argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:151
# 			s = (signed_s + 1.0) * 0.5;
	add		$tmp54 ___325_signed_s $const6 	%line{151} %argrw{"wrr"}
	mul		___323_s $tmp54 $const14 	%argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:152
# 			t = (signed_t + 1.0) * 0.5;
	add		$tmp55 ___325_signed_t $const6 	%line{152} %argrw{"wrr"}
	mul		___323_t $tmp55 $const14 	%argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:155
# 		result *= texture(image, s, t );
	texture		$tmp56 image ___323_s ___323_t 	%line{155} %argrw{"wrrr"} %argderivs{2,3}
	mul		result result $tmp56 	%argrw{"wrr"}
# ../../osl_shaders/environmentLight.osl:158
# 	out = Ci = result*emission() + transparent();
	closure		$tmp57 $const15 	%line{158} %argrw{"wr"}
	mul		$tmp58 $tmp57 result 	%argrw{"wrr"}
	closure		$tmp59 $const16 	%argrw{"wr"}
	add		Ci $tmp58 $tmp59 	%argrw{"wrr"}
	assign		out Ci 	%argrw{"wr"}
	end
