OpenShadingLanguage 1.00
# Compiled by oslc 1.10.0dev
# options: -q -o ..\build\win64-x64-release-free\2016.5\..\osl\pointLight.oso -I../../osl_shaders
surface pointLight	%meta{string[1],tags,"light"} 
param	color	i_color	1 1 1		%meta{string,label,"Color"} %meta{string,attribute,"color"}  %read{0,0} %write{2147483647,-1}
param	float	intensity	1		%meta{string,label,"Intensity"} %meta{float,slidermin,0} %meta{float,slidermax,10}  %read{0,0} %write{2147483647,-1}
param	float	exposure	0		%meta{string,label,"Exposure"} %meta{string,maya_attribute,"_3delight_light_exposure"} %meta{float,slidermin,-5} %meta{float,slidermax,10}  %read{59,59} %write{2147483647,-1}
param	int	decayRate	2		%meta{string,label,"Decay Rate"} %meta{string,widget,"mapper"} %meta{string,options,"No Decay:0|Linear:1|Quadratic:2|Cubic:3"}  %read{41,50} %write{2147483647,-1}
param	int	contributions	1		%meta{string,page,"Contributions"} %meta{string,label,"Enable"} %meta{string,widget,"null"}  %read{2,2} %write{2147483647,-1}
param	float	diffuse_contribution	1		%meta{string,maya_attribute,"_3delight_diffuseContribution"} %meta{string,page,"Contributions"} %meta{string,label,"Diffuse"} %meta{float,slidermin,0} %meta{float,slidermax,3} %meta{float,min,0} %meta{string,lock_left,"contributions"} %meta{string,lock_op,"notEqualTo"} %meta{int,lock_right,1}  %read{4,11} %write{2147483647,-1}
param	float	specular_contribution	1		%meta{string,maya_attribute,"_3delight_specularContribution"} %meta{string,page,"Contributions"} %meta{string,label,"Specular"} %meta{float,slidermin,0} %meta{float,slidermax,3} %meta{float,min,0} %meta{string,lock_left,"contributions"} %meta{string,lock_op,"notEqualTo"} %meta{int,lock_right,1}  %read{20,27} %write{2147483647,-1}
param	float	hair_contribution	1		%meta{string,maya_attribute,"_3delight_hairContribution"} %meta{string,page,"Contributions"} %meta{string,label,"Hair"} %meta{float,slidermin,0} %meta{float,slidermax,3} %meta{float,min,0} %meta{string,lock_left,"contributions"} %meta{string,lock_op,"notEqualTo"} %meta{int,lock_right,1}  %read{12,19} %write{2147483647,-1}
param	float	volume_contribution	1		%meta{string,maya_attribute,"_3delight_volumeContribution"} %meta{string,page,"Contributions"} %meta{string,label,"Volume"} %meta{float,slidermin,0} %meta{float,slidermax,3} %meta{float,min,0} %meta{string,lock_left,"contributions"} %meta{string,lock_op,"notEqualTo"} %meta{int,lock_right,1}  %read{28,35} %write{2147483647,-1}
param	color	filter	1 1 1		%meta{string,widget,"null"}  %read{55,55} %write{2147483647,-1}
oparam	closure color	out			%read{62,62} %write{38,61}
global	vector	I	%read{43,52} %write{2147483647,-1}
global	closure color	Ci	%read{2147483647,-1} %write{39,62}
local	color	result	%read{11,58} %write{1,55}
temp	color	$tmp1	%read{1,1} %write{0,0}
const	float	$const1	3.1415927		%read{1,1} %write{2147483647,-1}
const	int	$const2	1		%read{2,45} %write{2147483647,-1}
temp	int	$tmp2	%read{3,3} %write{2,2}
const	float	$const3	1		%read{4,28} %write{2147483647,-1}
temp	int	$tmp3	%read{5,5} %write{4,4}
temp	int	$tmp4	%read{6,10} %write{5,9}
const	int	$const4	0		%read{5,41} %write{2147483647,-1}
temp	int	$tmp5	%read{8,8} %write{7,7}
const	string	$const5	"diffuse"		%read{7,7} %write{2147483647,-1}
temp	int	$tmp6	%read{9,9} %write{8,8}
temp	int	$tmp7	%read{13,13} %write{12,12}
temp	int	$tmp8	%read{14,18} %write{13,17}
temp	int	$tmp9	%read{16,16} %write{15,15}
const	string	$const6	"hair"		%read{15,15} %write{2147483647,-1}
temp	int	$tmp10	%read{17,17} %write{16,16}
temp	int	$tmp11	%read{21,21} %write{20,20}
temp	int	$tmp12	%read{22,26} %write{21,25}
temp	int	$tmp13	%read{24,24} %write{23,23}
const	string	$const7	"specular"		%read{23,23} %write{2147483647,-1}
temp	int	$tmp14	%read{25,25} %write{24,24}
temp	int	$tmp15	%read{29,29} %write{28,28}
temp	int	$tmp16	%read{30,34} %write{29,33}
temp	int	$tmp17	%read{32,32} %write{31,31}
const	string	$const8	"volume"		%read{31,31} %write{2147483647,-1}
temp	int	$tmp18	%read{33,33} %write{32,32}
const	float	$const9	0		%read{36,36} %write{2147483647,-1}
temp	int	$tmp19	%read{37,37} %write{36,36}
temp	int	$tmp20	%read{42,42} %write{41,41}
temp	float	$tmp21	%read{44,44} %write{43,43}
temp	int	$tmp22	%read{46,46} %write{45,45}
temp	float	$tmp23	%read{49,49} %write{48,48}
temp	float	$tmp24	%read{48,48} %write{47,47}
const	int	$const10	3		%read{50,50} %write{2147483647,-1}
temp	int	$tmp25	%read{51,51} %write{50,50}
temp	float	$tmp26	%read{54,54} %write{53,53}
temp	float	$tmp27	%read{53,53} %write{52,52}
temp	closure color	$tmp28	%read{61,61} %write{56,56}
const	string	$const11	"emission"		%read{56,56} %write{2147483647,-1}
temp	float	$tmp29	%read{58,58} %write{57,57}
temp	color	$tmp30	%read{60,60} %write{58,58}
temp	float	$tmp31	%read{60,60} %write{59,59}
const	float	$const13	2		%read{59,59} %write{2147483647,-1}
temp	color	$tmp32	%read{61,61} %write{60,60}
code ___main___
# ../../osl_shaders/pointLight.osl:89
# 	color result = i_color * intensity * M_PI;
	mul		$tmp1 i_color intensity 	%filename{"../../osl_shaders/pointLight.osl"} %line{89} %argrw{"wrr"}
	mul		result $tmp1 $const1 	%argrw{"wrr"}
# ../../osl_shaders/pointLight.osl:95
# 	if( contributions == 1 )
	eq		$tmp2 contributions $const2 	%line{95} %argrw{"wrr"}
	if		$tmp2 36 36 	%argrw{"r"}
# ../../osl_shaders/pointLight.osl:97
# 		if( diffuse_contribution!=1.0 && raytype("diffuse") )
	neq		$tmp3 diffuse_contribution $const3 	%line{97} %argrw{"wrr"}
	neq		$tmp4 $tmp3 $const4 	%argrw{"wrr"}
	if		$tmp4 10 10 	%argrw{"r"}
	raytype		$tmp5 $const5 	%argrw{"wr"}
	neq		$tmp6 $tmp5 $const4 	%argrw{"wrr"}
	assign		$tmp4 $tmp6 	%argrw{"wr"}
	if		$tmp4 12 36 	%argrw{"r"}
# ../../osl_shaders/pointLight.osl:98
# 			result *= diffuse_contribution;
	mul		result result diffuse_contribution 	%line{98} %argrw{"wrr"}
# ../../osl_shaders/pointLight.osl:99
# 		else if( hair_contribution!=1.0 && raytype("hair") )
	neq		$tmp7 hair_contribution $const3 	%line{99} %argrw{"wrr"}
	neq		$tmp8 $tmp7 $const4 	%argrw{"wrr"}
	if		$tmp8 18 18 	%argrw{"r"}
	raytype		$tmp9 $const6 	%argrw{"wr"}
	neq		$tmp10 $tmp9 $const4 	%argrw{"wrr"}
	assign		$tmp8 $tmp10 	%argrw{"wr"}
	if		$tmp8 20 36 	%argrw{"r"}
# ../../osl_shaders/pointLight.osl:100
# 			result *= hair_contribution;
	mul		result result hair_contribution 	%line{100} %argrw{"wrr"}
# ../../osl_shaders/pointLight.osl:101
# 		else if( specular_contribution!=1.0 && raytype("specular") )
	neq		$tmp11 specular_contribution $const3 	%line{101} %argrw{"wrr"}
	neq		$tmp12 $tmp11 $const4 	%argrw{"wrr"}
	if		$tmp12 26 26 	%argrw{"r"}
	raytype		$tmp13 $const7 	%argrw{"wr"}
	neq		$tmp14 $tmp13 $const4 	%argrw{"wrr"}
	assign		$tmp12 $tmp14 	%argrw{"wr"}
	if		$tmp12 28 36 	%argrw{"r"}
# ../../osl_shaders/pointLight.osl:102
# 			result *= specular_contribution;
	mul		result result specular_contribution 	%line{102} %argrw{"wrr"}
# ../../osl_shaders/pointLight.osl:103
# 		else if( volume_contribution!=1.0 && raytype("volume") )
	neq		$tmp15 volume_contribution $const3 	%line{103} %argrw{"wrr"}
	neq		$tmp16 $tmp15 $const4 	%argrw{"wrr"}
	if		$tmp16 34 34 	%argrw{"r"}
	raytype		$tmp17 $const8 	%argrw{"wr"}
	neq		$tmp18 $tmp17 $const4 	%argrw{"wrr"}
	assign		$tmp16 $tmp18 	%argrw{"wr"}
	if		$tmp16 36 36 	%argrw{"r"}
# ../../osl_shaders/pointLight.osl:104
# 			result *= volume_contribution;
	mul		result result volume_contribution 	%line{104} %argrw{"wrr"}
# ../../osl_shaders/pointLight.osl:107
# 	if( result == 0.0 )
	eq		$tmp19 result $const9 	%line{107} %argrw{"wrr"}
	if		$tmp19 41 41 	%argrw{"r"}
# ../../osl_shaders/pointLight.osl:109
# 		out = 0;
	assign		out $const4 	%line{109} %argrw{"wr"}
# ../../osl_shaders/pointLight.osl:110
# 		Ci = 0;
	assign		Ci $const4 	%line{110} %argrw{"wr"}
# ../../osl_shaders/pointLight.osl:111
# 		return;
	exit	%line{111}
# ../../osl_shaders/pointLight.osl:119
# 	if( decayRate == 0 )
	eq		$tmp20 decayRate $const4 	%line{119} %argrw{"wrr"}
	if		$tmp20 45 55 	%argrw{"r"}
# ../../osl_shaders/pointLight.osl:121
# 		result *= dot(I,I);
	dot		$tmp21 I I 	%line{121} %argrw{"wrr"}
	mul		result result $tmp21 	%argrw{"wrr"}
# ../../osl_shaders/pointLight.osl:123
# 	else if( decayRate == 1 )
	eq		$tmp22 decayRate $const2 	%line{123} %argrw{"wrr"}
	if		$tmp22 50 55 	%argrw{"r"}
# ../../osl_shaders/pointLight.osl:125
# 		result *= sqrt(dot(I,I));
	dot		$tmp24 I I 	%line{125} %argrw{"wrr"}
	sqrt		$tmp23 $tmp24 	%argrw{"wr"}
	mul		result result $tmp23 	%argrw{"wrr"}
# ../../osl_shaders/pointLight.osl:127
# 	else if( decayRate == 3 )
	eq		$tmp25 decayRate $const10 	%line{127} %argrw{"wrr"}
	if		$tmp25 55 55 	%argrw{"r"}
# ../../osl_shaders/pointLight.osl:129
# 		result /= sqrt(dot(I,I));
	dot		$tmp27 I I 	%line{129} %argrw{"wrr"}
	sqrt		$tmp26 $tmp27 	%argrw{"wr"}
	div		result result $tmp26 	%argrw{"wrr"}
# ../../osl_shaders/pointLight.osl:132
# 	result *= filter;
	mul		result result filter 	%line{132} %argrw{"wrr"}
# ../../osl_shaders/pointLight.osl:133
# 	Ci = out = result / surfacearea() * pow(2, exposure) * emission();
	closure		$tmp28 $const11 	%line{133} %argrw{"wr"}
	surfacearea	$tmp29 	%argrw{"w"}
	div		$tmp30 result $tmp29 	%argrw{"wrr"}
	pow		$tmp31 $const13 exposure 	%argrw{"wrr"}
	mul		$tmp32 $tmp30 $tmp31 	%argrw{"wrr"}
	mul		out $tmp28 $tmp32 	%argrw{"wrr"}
	assign		Ci out 	%argrw{"wr"}
	end
